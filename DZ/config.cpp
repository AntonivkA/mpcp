// config.bin - 11:22:51 05/22/17, generated in 0.28 seconds
// Generated by unRap v1.06 by Kegetys
// Separate rootclasses: Disabled, Automatic comments: Enabled

#define ReadAndWrite		0
#define ReadAndCreate		1
#define ReadOnly		2
#define ReadOnlyVerified		3

#define TEast		0
#define TWest		1
#define TGuerrila		2
#define TCivilian		3
#define TSideUnknown		4
#define TEnemy		5
#define TFriendly		6
#define TLogic		7

#define true	1
#define false	0

#define VSoft		0
#define VArmor		1
#define VAir		2

#define private		0
#define protected		1
#define public		2

enum {
	DESTRUCTENGINE = 2,
	DESTRUCTDEFAULT = 6,
	DESTRUCTWRECK = 7,
	DESTRUCTTREE = 3,
	DESTRUCTTENT = 4,
	STABILIZEDINAXISX = 1,
	STABILIZEDINAXISY = 2,
	DESTRUCTNO = 0,
	STABILIZEDINAXESBOTH = 3,
	STABILIZEDINAXESNONE = 0,
	DESTRUCTMAN = 5,
	DESTRUCTBUILDING = 1,
};

class CfgPatches {
	class DZ_Data {
		units[] = {"FxWindGrass1", "FxWindGrass2", "FxWindRock1", "FxWindLeaf1", "FxWindLeaf2", "FxWindLeaf3", "FxWindPollen1", "FXUSWindLeaf1", "FXUSWindLeaf2", "FXUSWindLeaf3"};
		weapons[] = {};
		requiredVersion = 0.1;
		requiredAddons[] = {};
	};
};

class CfgAddons {
	class PreloadBanks {};
	
	class PreloadAddons {
		class DayZ {
			list[] = {"DZ_A_Airport", "DZ_Animals", "DZ_Animals_AnimConfig", "DZ_Animals_Birds", "DZ_Animals_Birds_Chicken", "DZ_Animals_Birds_Cock", "DZ_Animals_Birds_Crow", "DZ_Animals_Birds_hawk", "DZ_Animals_Birds_Seagull", "DZ_Animals_Cow", "DZ_Animals_Deer", "DZ_Animals_Dogs_Fin", "DZ_Animals_Dogs_Pastor", "DZ_Animals_Goat", "DZ_Animals_Insect", "DZ_Animals_Rabbit", "DZ_Animals_Rat", "DZ_Animals_Sheep", "DZ_Animals_WildBoar", "DZ_Anims", "DZ_Anims_Config_Sdr", "DZ_Anims_Config_Wmn", "DZ_Anims_Config_Zmb", "DZ_Buildings", "DZ_Buildings2", "DZ_Buildings2_A_Crane_02", "DZ_Buildings2_A_GENERALSTORE_01", "DZ_Buildings2_A_Pub", "DZ_Buildings2_A_Statue", "DZ_Buildings2_Barn_Metal", "DZ_Buildings2_BuildingParts", "DZ_Buildings2_BuildingParts_Signs", "DZ_Buildings2_BuildingParts_Signs_TEC", "DZ_Buildings2_Church_01", "DZ_Buildings2_Farm_Cowshed", "DZ_Buildings2_Farm_WTower", "DZ_Buildings2_HouseBlocks_HouseBlock_A", "DZ_Buildings2_HouseBlocks_HouseBlock_B", "DZ_Buildings2_HouseBlocks_HouseBlock_C", "DZ_Buildings2_HouseBlocks_HouseBlock_D", "DZ_Buildings2_Ind_CementWorks_Ind_Dopravnik", "DZ_Buildings2_Ind_CementWorks_Ind_Expedice", "DZ_Buildings2_Ind_CementWorks_Ind_MalyKomin", "DZ_Buildings2_Ind_CementWorks_Ind_Mlyn", "DZ_Buildings2_Ind_CementWorks_Ind_Pec", "DZ_Buildings2_Ind_CementWorks_Ind_SiloMale", "DZ_Buildings2_Ind_CementWorks_Ind_SiloVelke", "DZ_Buildings2_Ind_CementWorks_Ind_Vysypka", "DZ_Buildings2_Ind_Garage01", "DZ_Buildings2_Ind_Pipeline_IndPipe2", "DZ_Buildings2_Ind_Shed_01", "DZ_Buildings2_Ind_Shed_02", "DZ_Buildings2_Ind_Tank", "DZ_Buildings2_Ind_Workshop01", "DZ_Buildings2_Misc_Cargo", "DZ_Buildings2_Misc_PowerStation", "DZ_Buildings2_Misc_WaterStation", "DZ_Buildings2_Rail_House_01", "DZ_Buildings2_Shed_small", "DZ_Buildings2_Shed_wooden", "DZ_Characters", "DZ_Characters_Backpacks", "DZ_Characters_Glasses", "DZ_Characters_Gloves", "DZ_Characters_Headgear", "DZ_Characters_Heads", "DZ_Characters_Pants", "DZ_Characters_Masks", "DZ_Characters_Shoes", "DZ_Characters_Tops", "DZ_Characters_Vests", "DZ_Code", "DZ_Data", "DZ_Data_Data_ParticleEffects", "DZ_Functions", "DZ_Gear_Crafting", "DZ_Gear_Cooking", "DZ_Gear_Consumables", "DZ_Gear_Containers", "DZ_Gear_Drinks", "DZ_Gead_Food", "DZ_Gear_Medical", "DZ_Gear_Navigation", "DZ_Gear_Optics", "DZ_Gear_Tools", "DZ_Gear_Traps", "DZ_Items", "DZ_Items_Drinks", "DZ_Items_Food", "DZ_Items_Medical", "DZ_Items_Misc", "DZ_Items_Trash", "DZ_Items_Weapons", "DZ_Misc", "DZ_Misc2", "DZ_Misc2_Samsite", "DZ_Misc3", "DZ_Modules", "DZ_Roads2", "DZ_Roads2_Bridge", "DZ_Roads2_Dam", "DZ_Rocks2", "DZ_Rocks3", "DZ_Signs2", "DZ_Server_Data", "DZ_Spawn_Proxies", "DZ_Sounds_Arma2", "DZ_Sounds_Mod", "DZ_Sounds_Effects", "DZ_Structures", "DZ_Structures_A_BuildingWIP", "DZ_Structures_A_CraneCon", "DZ_Structures_A_MunicipalOffice", "DZ_Structures_A_TVTower", "DZ_Structures_Barn_W", "DZ_Structures_Castle", "DZ_Structures_Furniture", "DZ_Structures_Houses", "DZ_Structures_House_A_FuelStation", "DZ_Structures_House_A_Hospital", "DZ_Structures_House_A_Office01", "DZ_Structures_House_A_Office02", "DZ_Structures_House_A_StationHouse", "DZ_Structures_House_Church_02", "DZ_Structures_House_Church_03", "DZ_Structures_House_Church_05R", "DZ_Structures_House_HouseBT", "DZ_Structures_House_HouseV", "DZ_Structures_House_HouseV2", "DZ_Structures_House_Street_Booth", "DZ_Structures_Ind", "DZ_Structures_Ind_Pipeline_IndPipe1", "DZ_Structures_Ind_Quarry", "DZ_Structures_Ind_SawMill", "DZ_Structures_Mil", "DZ_Structures_Misc", "DZ_Structures_Misc_Powerlines", "DZ_Structures_NAV", "DZ_Structures_Nav_Boathouse", "DZ_Structures_Nav_Pier", "DZ_Structures_Pond", "DZ_Structures_Rail", "DZ_Structures_Rail_Rail_Station_big", "DZ_Structures_Rail_Railway", "DZ_Structures_Ruins", "DZ_Structures_Shed_Ind", "DZ_Structures_Shed_Shed_Small", "DZ_Structures_Tenement", "DZ_Structures_Wall", "DZ_Structures_Ship_Wreck", DZ_UI, "DZ_UIFonts", "DZ_UIFonts_CoreConfigOverwrite", "DZ_Vehicles_Tracked", "DZ_Vehicles_Wheeled", "DZ_Vehicles_Wheeled_Datsun_Armed", "DZ_Vehicles_Wheeled_Hilux_Armed", "DZ_Vehicles_Wrecks", "DZ_Weapons_Magazines", "DZ_Weapons_Lights", "DZ_Weapons_Muzzles", "DZ_Weapons_Optics", "DZ_Weapons_Supports", "DZ_Weapons_Animations", "DZ_Weapons_Ammunition", "DZ_Weapons_Firearms", "DZ_Weapons_Firearms_Winchester70", "DZ_Weapons_Firearms_SVD", "DZ_Weapons_Melee", "DZ_Weapons_Melee_Blunt", "DZ_Weapons_Melee_Blade", "DZ_Weapons_Melee_Powered", "DZ_Weapons_Misc", "DZ_Weapons_Explosives", "DZ_Weapons_Firearms_aug", "DZ_Weapons_Firearms_M4", "DZ_Weapons_Firearms_MosinNagant", "DZ_Weapons_Firearms_SKS", "DZ_Weapons_Firearms_Ruger1022", "DZ_Weapons_Pistols_1911", "DZ_Weapons_Pistols_Cz75", "DZ_Weapons_Pistols_Fnx45", "DZ_Weapons_Pistols_Magnum", "DZ_Weapons_Pistols_Mkii", "DZ_Weapons_Projectiles", "DZ_Weapons_Shotguns", "DZ_Worlds_Chernarusplus_World", "DZ_Worlds_Test_Terrain"};
		};
	};
};

class CfgWorlds {
	initWorld = "Intro_Island";
	
	class DefaultWorld {
		class Lighting;	// External class reference
		class DayLightingBrightAlmost;	// External class reference
		class DayLightingRainy;	// External class reference
		
		class Weather {
			class Lighting {
				class BrightAlmost;	// External class reference
			};
			
			class Overcast {
				class Weather1;	// External class reference
				class Weather2;	// External class reference
				class Weather3;	// External class reference
				class Weather4;	// External class reference
				class Weather5;	// External class reference
			};
		};
		
		class SimulWeather {
			class DefaultKeyframe;	// External class reference
			
			class Overcast {
				class Weather1;	// External class reference
				class Weather2;	// External class reference
				class Weather3;	// External class reference
				class Weather4;	// External class reference
				class Weather5;	// External class reference
				class Weather6;	// External class reference
			};
		};
	};
	
	class CAWorld : DefaultWorld {
		class Lighting : Lighting {
			groundReflection[] = {0.132, 0.133, 0.122};
		};
		
		class DayLightingBrightAlmost : DayLightingBrightAlmost {
			deepNight[] = {-15, {0.005, 0.01, 0.01}, {0.0, 0.002, 0.003}, {0.0, 0.0, 0.0}, {0.0, 0.0, 0.0}, {0.0, 0.002, 0.003}, {0.0, 0.002, 0.003}, 0};
			fullNight[] = {-5, {0.182, 0.213, 0.25}, {0.05, 0.111, 0.221}, {0.04, 0.034, 0.004}, {0.039, 0.049, 0.072}, {0.082, 0.128, 0.185}, {0.283, 0.35, 0.431}, 0};
			sunMoon[] = {-3.75, {0.377, 0.441, 0.518}, {0.103, 0.227, 0.453}, {0.04, 0.034, 0.004}, {0.039, 0.049, 0.072}, {0.174, 0.274, 0.395}, {0.582, 0.72, 0.887}, 0.5};
			earlySun[] = {-2.5, {0.675, 0.69, 0.784}, {0.22, 0.322, 0.471}, {0.04, 0.034, 0.004}, {0.039, 0.049, 0.072}, {0.424, 0.549, 0.745}, {0.698, 0.753, 0.894}, 1};
			sunrise[] = {0, {0.675, 0.69, 0.784}, {0.478, 0.51, 0.659}, {0.2, 0.19, 0.07}, {0.124, 0.161, 0.236}, {{0.847, 0.855, 0.965}, 0.2}, {{0.933, 0.949, 0.996}, 2}, 1};
			earlyMorning[] = {3, {{0.844, 0.61, 0.469}, 0.8}, {0.424, 0.557, 0.651}, {{1, 0.45, 0.2}, 1}, {0.12, 0.26, 0.38}, {{0.428, 0.579, 0.743}, 2}, {{0.844, 0.61, 0.469}, 2.7}, 1};
			midMorning[] = {8, {{0.822, 0.75, 0.646}, 3.8}, {{0.383, 0.58, 0.858}, 1.3}, {{1.3, 0.9, 0.61}, 2.8}, {{0.12, 0.18, 0.28}, 0.5}, {{0.322, 0.478, 0.675}, 3.5}, {{1.0, 0.929, 0.815}, 4.7}, 1};
			morning[] = {16, {{1, 0.95, 0.91}, 12.2}, {{0.12, 0.18, 0.28}, 9.2}, {{1, 0.95, 0.91}, 11.2}, {{0.12, 0.18, 0.28}, 8.5}, {{0.14, 0.18, 0.24}, 11.0}, {{0.5, 0.6, 0.9}, 13.2}, 1};
			noon[] = {45, {{0.98, 0.94, 0.94}, 13.8}, {{0.2, 0.27, 0.35}, 10.8}, {{0.98, 0.94, 0.94}, 13.8}, {{0.2, 0.27, 0.35}, 10.8}, {{0.5, 0.64, 1.0}, 12.0}, {{0.5, 0.5, 0.5}, 14.8}, 1, 0.5, 0.4, 0.5, 0.4};
		};
		
		class DayLightingRainy : DayLightingRainy {
			deepNight[] = {-15, {0.005, 0.01, 0.01}, {0.0, 0.002, 0.003}, {0.0, 0.0, 0.0}, {0.0, 0.0, 0.0}, {0.0, 0.002, 0.003}, {0.0, 0.002, 0.003}, 0};
			fullNight[] = {-5, {0.023, 0.023, 0.023}, {0.02, 0.02, 0.02}, {0.023, 0.023, 0.023}, {0.02, 0.02, 0.02}, {0.01, 0.01, 0.02}, {0.08, 0.06, 0.06}, 0};
			sunMoon[] = {-3.75, {0.04, 0.04, 0.05}, {0.04, 0.04, 0.05}, {0.04, 0.04, 0.05}, {0.04, 0.04, 0.05}, {0.04, 0.035, 0.04}, {0.11, 0.08, 0.09}, 0.5};
			earlySun[] = {-2.5, {0.0689, 0.0689, 0.0804}, {0.06, 0.06, 0.07}, {0.0689, 0.0689, 0.0804}, {0.06, 0.06, 0.07}, {0.08, 0.07, 0.08}, {0.14, 0.1, 0.12}, 0.5};
			earlyMorning[] = {3, {{1, 1, 1}, (-4)+3.95}, {{1, 1, 1}, (-4)+3.0}, {{1, 1, 1}, (-4)+3.95}, {{1, 1, 1}, (-4)+3.0}, {{1, 1, 1}, (-4)+4}, {{1, 1, 1}, (-4)+5.5}, 1};
			morning[] = {16, {{1, 1, 1}, (-4)+5.7}, {{1, 1, 1}, (-4)+4.5}, {{1, 1, 1}, (-4)+5.7}, {{1, 1, 1}, (-4)+4.5}, {{1, 1, 1}, (-4)+7}, {{1, 1, 1}, (-4)+8}, 1};
			lateMorning[] = {25, {{1, 1, 1}, (-4)+10.45}, {{1, 1, 1}, (-4)+9.75}, {{1, 1, 1}, (-4)+10.45}, {{1, 1, 1}, (-4)+9.75}, {{1, 1, 1}, (-4)+12}, {{1, 1, 1}, (-4)+12.75}, 1};
			noon[] = {45, {{1, 1, 1}, 10.0}, {{1, 1, 1}, 9.0}, {{1, 1, 1}, 9.0}, {{1, 1, 1}, 8.0}, {{0.5, 0.64, 1}, 12.0}, {{0.5, 0.5, 0.5}, 14.8}, 1};
		};
		
		class SimulWeather : SimulWeather {
			noiseTexture = "dz\data\data\noise_raw.paa";
			numKeyframesPerDay = 48;
			windSpeedCoef = "40.0f";
			moonIrradianceCoef = "10.0f";
			fadeMaxDistanceKm = 100.0;
			fadeMaxAltitudeKm = 15.0;
			fadeNumAltitudes = 8;
			fadeNumElevations = 8;
			fadeNumDistances = 8;
			fadeEarthTest = 0;
			autoBrightness = 1;
			autoBrightnessStrength = 0.1;
			cloudGridWidth = 64;
			cloudGridLength = 64;
			cloudGridHeight = 16;
			helperGridElevationSteps = 24;
			helperGridAzimuthSteps = 15;
			helperEffectiveEarthRadius = 1100000;
			helperCurvedEarth = 1;
			helperAdjustCurvature = 0;
			helperNumLayers = 80;
			helperMaxDistance = 100000;
			helperNearCloudFade = 0.1;
			helperChurn = 10;
			cloudWidth = 40000;
			cloudLength = 40000;
			wrapClouds = 1;
			noiseResolution = 8;
			noisePeriod = 4.0;
			opticalDensity = 1.5;
			alphaSharpness = 0.03;
			selfShadowScale = 0.001;
			mieAsymmetry = 0.9;
			minimumLightElevationDegrees = 3.0;
			directLightCoef = 0.2;
			indirectLightCoef = 0.01;
			fogStart = 0;
			fogEnd = 40000;
			fogHeight = 1000;
			
			class DefaultKeyframe : DefaultKeyframe {
				rayleigh[] = {0.00749, 0.01388, 0.02878};
				mie[] = {0.0046, 0.0046, 0.0046};
				haze = 1.0;
				hazeBaseKm = 1.0;
				hazeScaleKm = 0.5;
				hazeEccentricity = 0.82;
				brightnessAdjustment = 1.0;
				cloudiness = 0.5;
				cloudBaseKm = 4;
				cloudHeightKm = 5;
				directLight = 1.0;
				indirectLight = 1.0;
				ambientLight = 1.0;
				noiseOctaves = 3;
				noisePersistence = 0.55;
				fractalAmplitude = 1.4;
				fractalWavelength = 120.0;
				extinction = 1.7;
				diffusivity = 0.01;
			};
			
			class Overcast {
				class Weather1 : DefaultKeyframe {
					overcast = 0.0;
					cloudiness = 0.15;
					cloudBaseKm = 2.4;
					cloudHeightKm = 4;
					noiseOctaves = 3;
					noisePersistence = 0.55;
					diffusivity = 0.99;
					directLight = 0.64;
					indirectLight = 0.5;
					ambientLight = 1.0;
					extinction = 3.54;
					fractalWavelength = 170.0;
					fractalAmplitude = 2;
				};
				
				class Weather2 : DefaultKeyframe {
					overcast = 0.2;
					cloudiness = 0.2;
					cloudBaseKm = 2.4;
					cloudHeightKm = 4;
					noiseOctaves = 3;
					noisePersistence = 0.55;
					diffusivity = 0.95;
					directLight = 0.64;
					indirectLight = 0.5;
					ambientLight = 1.0;
					extinction = 3.54;
					fractalWavelength = 170.0;
					fractalAmplitude = 2;
				};
				
				class Weather3 : DefaultKeyframe {
					overcast = 0.4;
					cloudiness = 0.4;
					cloudBaseKm = 2.4;
					cloudHeightKm = 3.6;
					noiseOctaves = 4;
					noisePersistence = 0.8;
					diffusivity = 0.4;
					directLight = 1;
					indirectLight = 0.5;
					ambientLight = 0.9;
					extinction = 3.5;
					fractalWavelength = 130.0;
					fractalAmplitude = 2.1;
				};
				
				class Weather4 : DefaultKeyframe {
					overcast = 0.6;
					cloudiness = 0.5;
					cloudBaseKm = 2.4;
					cloudHeightKm = 3.6;
					noiseOctaves = 4;
					noisePersistence = 0.85;
					diffusivity = 0.4;
					directLight = 0.64;
					indirectLight = 0.5;
					ambientLight = 0.5;
					extinction = 3.5;
					fractalWavelength = 140.0;
					fractalAmplitude = 2.5;
				};
				
				class Weather5 : DefaultKeyframe {
					overcast = 0.8;
					cloudiness = 0.8;
					cloudBaseKm = 1.2;
					cloudHeightKm = 3;
					noiseOctaves = 4;
					noisePersistence = 0.3;
					diffusivity = 0.6;
					directLight = 0.64;
					indirectLight = 0.3;
					ambientLight = 0.3;
					extinction = 3.5;
					fractalWavelength = 120.0;
					fractalAmplitude = 2.6;
				};
				
				class Weather6 : DefaultKeyframe {
					overcast = 1.0;
					cloudiness = 1;
					cloudBaseKm = 1;
					cloudHeightKm = 3;
					noiseOctaves = 6;
					noisePersistence = 0.55;
					diffusivity = 0.7;
					directLight = 0.64;
					indirectLight = 0.25;
					ambientLight = 0.2;
					extinction = 3.5;
					fractalWavelength = 170.0;
					fractalAmplitude = 2;
				};
			};
		};
		
		class Weather : Weather {
			class LightingNew {
				class Lighting0 {
					height = 0;
					overcast = 0;
					sunAngle = -15;
					sunOrMoon = 0;
					diffuse[] = {0.012, 0.025, 0.036};
					diffuseCloud[] = {0.005, 0.01, 0.01};
					ambient[] = {0.004, 0.0079, 0.012};
					ambientCloud[] = {0.002, 0.003, 0.003};
					groundReflection[] = {0.001, 0.001, 0.002};
					groundReflectionCloud[] = {0.001, 0.001, 0.002};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.004, 0.006, 0.008};
					skyAroundSun[] = {0.008, 0.012, 0.019};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.5, 0.5, 0.5}, 2};
					swBrightness = 12;
				};
				
				class Lighting29 {
					height = 0;
					overcast = 0;
					sunAngle = -12;
					sunOrMoon = 0;
					diffuse[] = {0.012, 0.025, 0.036};
					diffuseCloud[] = {0.005, 0.01, 0.01};
					ambient[] = {0.004, 0.0079, 0.012};
					ambientCloud[] = {0.002, 0.003, 0.003};
					groundReflection[] = {0.001, 0.001, 0.002};
					groundReflectionCloud[] = {0.001, 0.001, 0.002};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.004, 0.006, 0.008};
					skyAroundSun[] = {0.008, 0.012, 0.019};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.5, 0.5, 0.5}, 2};
					swBrightness = 12;
				};
				
				class Lighting30 {
					height = 0;
					overcast = 0;
					sunAngle = -11;
					sunOrMoon = 0.5;
					diffuse[] = {0.012, 0.025, 0.036};
					diffuseCloud[] = {0.005, 0.01, 0.01};
					ambient[] = {0.004, 0.0079, 0.012};
					ambientCloud[] = {0.002, 0.003, 0.003};
					groundReflection[] = {0.001, 0.001, 0.002};
					groundReflectionCloud[] = {0.001, 0.001, 0.002};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.004, 0.006, 0.008};
					skyAroundSun[] = {0.008, 0.012, 0.019};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.5, 0.5, 0.5}, 2};
					swBrightness = 12;
				};
				
				class Lighting31 {
					height = 0;
					overcast = 0;
					sunAngle = -10;
					sunOrMoon = 1;
					diffuse[] = {0.036, 0.04, 0.056};
					diffuseCloud[] = {0.032, 0.0272, 0.03};
					ambient[] = {0.004, 0.0079, 0.012};
					ambientCloud[] = {0.002, 0.003, 0.003};
					groundReflection[] = {0.001, 0.001, 0.002};
					groundReflectionCloud[] = {0.001, 0.001, 0.002};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.004, 0.006, 0.008};
					skyAroundSun[] = {0.008, 0.012, 0.019};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.5, 0.5, 0.5}, 2};
					swBrightness = 12;
				};
				
				class Lighting1 {
					height = 0;
					overcast = 0;
					sunAngle = -6;
					sunOrMoon = 1;
					diffuse[] = {0.036, 0.04, 0.056};
					diffuseCloud[] = {0.032, 0.0272, 0.03};
					ambient[] = {0.0104, 0.02, 0.04};
					ambientCloud[] = {0.005, 0.01, 0.01};
					groundReflection[] = {0.001, 0.0025, 0.004};
					groundReflectionCloud[] = {0.001, 0.0025, 0.004};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.034328, 0.053585, 0.075354};
					skyAroundSun[] = {0.084063, 0.103964, 0.128025};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {0.5, 0.5, 0.5};
					swBrightness = 4;
				};
				
				class Lighting2 {
					height = 0;
					overcast = 0;
					sunAngle = -4.5;
					sunOrMoon = 1;
					diffuse[] = {0, 0, 0};
					diffuseCloud[] = {0, 0, 0};
					ambient[] = {0.06, 0.05439, 0.04};
					ambientCloud[] = {0.01, 0.01, 0.01};
					groundReflection[] = {0.0025, 0.00625, 0.01};
					groundReflectionCloud[] = {0.0025, 0.00625, 0.01};
					bidirect[] = {0.0768, 0.07872, 0.0896};
					bidirectCloud[] = {0.046875, 0.046875, 0.0192};
					sky[] = {0.046567, 0.073329, 0.105712};
					skyAroundSun[] = {{0.8, 0.4, 0.268967}, 0.2};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1.5, 0.5, 0.5}, 2};
					swBrightness = 2;
				};
				
				class Lighting3 {
					height = 0;
					overcast = 0;
					sunAngle = -3.75;
					sunOrMoon = 1;
					diffuse[] = {0.06174, 0.07546, 0.08918};
					diffuseCloud[] = {0.06174, 0.07546, 0.08918};
					ambient[] = {0.0245, 0.05439, 0.10829};
					ambientCloud[] = {0.0245, 0.05439, 0.10829};
					groundReflection[] = {0.005, 0.0125, 0.02};
					groundReflectionCloud[] = {0.005, 0.0125, 0.02};
					bidirect[] = {0.096, 0.0984, 0.112};
					bidirectCloud[] = {0.0375, 0.0375, 0.024};
					sky[] = {0.046567, 0.073329, 0.105712};
					skyAroundSun[] = {{0.8, 0.4, 0.268967}, 0.2};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1.5, 0.5, 0.5}, 3};
					swBrightness = 2;
				};
				
				class Lighting4 {
					height = 0;
					overcast = 0;
					sunAngle = -2.5;
					sunOrMoon = 1;
					diffuse[] = {{0.675, 0.69, 0.784}, 3};
					diffuseCloud[] = {{0.04, 0.034, 0.004}, 3};
					ambient[] = {{0.22, 0.322, 0.471}, 1.8};
					ambientCloud[] = {{0.039, 0.049, 0.072}, 1.8};
					groundReflection[] = {{0.22, 0.322, 0.471}, 0.1};
					groundReflectionCloud[] = {{0.22, 0.322, 0.471}, 0.1};
					bidirect[] = {0.12, 0.123, 0.14};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{0.6, 0.549, 0.745}, 2};
					skyAroundSun[] = {{2.1, 0.753, 0.894}, 2.65};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1.3, 0.5, 0.5}, 7.97372};
					swBrightness = 2;
				};
				
				class Lighting5 {
					height = 0;
					overcast = 0;
					sunAngle = 0;
					sunOrMoon = 1;
					diffuse[] = {{3.5, 1.64, 1}, 6.4076};
					diffuseCloud[] = {{3.5, 1.64, 1}, 6.4076};
					ambient[] = {{0.2, 0.23, 0.4}, 5.8};
					ambientCloud[] = {{0.2, 0.23, 0.4}, 5.8};
					groundReflection[] = {{0.3, 0.3, 0.3}, 0.362936};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 0.362936};
					bidirect[] = {0.12, 0.123, 0.14};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{1.2, 0.64, 1}, 6.7};
					skyAroundSun[] = {{5.5, 1.64, 1}, 7.7};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.002, 0.01388, 0.02878};
					mie[] = {0.005, 0.0046, 0.0046};
					cloudsColor[] = {{1.3, 1, 1}, 8.13645};
					swBrightness = 2;
				};
				
				class Lighting6 {
					height = 0;
					overcast = 0;
					sunAngle = 3;
					sunOrMoon = 1;
					diffuse[] = {{3.5, 1.64, 1}, 8.77754};
					diffuseCloud[] = {{3.5, 1.64, 1}, 8.77754};
					ambient[] = {{0.2, 0.23, 0.4}, 7.20029};
					ambientCloud[] = {{0.2, 0.23, 0.4}, 7.20029};
					groundReflection[] = {{0.3, 0.3, 0.3}, 0.45367};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 0.45367};
					bidirect[] = {0.12, 0.123, 0.14};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{1.3, 0.64, 1}, 10.0035};
					skyAroundSun[] = {{2.2, 1.64, 1}, 10.6191};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.003, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1.3, 1, 1}, 9.0405};
					swBrightness = 2;
				};
				
				class Lighting7 {
					height = 0;
					overcast = 0;
					sunAngle = 8;
					sunOrMoon = 1;
					diffuse[] = {{0.822, 0.75, 0.646}, 10.9719};
					diffuseCloud[] = {{0.822, 0.75, 0.646}, 10.9719};
					ambient[] = {{0.383, 0.58, 0.858}, 9.60039};
					ambientCloud[] = {{0.383, 0.58, 0.858}, 9.60039};
					groundReflection[] = {{0.3, 0.3, 0.3}, 0.567088};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 0.567088};
					bidirect[] = {0.08, 0.08, 0.07};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{1.1, 0.64, 1}, 11.115};
					skyAroundSun[] = {{1.5, 0.64, 1}, 11.799};
					desiredLuminanceCoef = 1;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.5, 0.5, 0.5}, 9.225};
					swBrightness = 2;
				};
				
				class Lighting8 {
					height = 0;
					overcast = 0;
					sunAngle = 16;
					sunOrMoon = 1;
					diffuse[] = {{1, 0.95, 0.91}, 12.328};
					diffuseCloud[] = {{1, 0.95, 0.91}, 12.328};
					ambient[] = {{0.12, 0.18, 0.28}, 10.323};
					ambientCloud[] = {{0.12, 0.18, 0.28}, 10.323};
					groundReflection[] = {{0.2, 0.2, 0.15}, 0.6164};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 0.6164};
					bidirect[] = {0.08, 0.08, 0.07};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{0.5, 0.64, 1}, 11.7};
					skyAroundSun[] = {{0.5, 0.64, 1}, 12.42};
					desiredLuminanceCoef = 0.55;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1, 1, 1}, 10.25};
					swBrightness = 2;
				};
				
				class Lighting9 {
					height = 0;
					overcast = 0;
					sunAngle = 45;
					sunOrMoon = 1;
					diffuse[] = {{1, 0.94, 0.94}, 13.4};
					diffuseCloud[] = {{0.5, 0.47, 0.47}, 13.4};
					ambient[] = {{0.2, 0.27, 0.32}, 11.1};
					ambientCloud[] = {{0.2, 0.27, 0.32}, 11.1};
					groundReflection[] = {{0.2, 0.2, 0.15}, 0.67};
					groundReflectionCloud[] = {{0.2, 0.2, 0.15}, 0.67};
					bidirect[] = {0.08, 0.08, 0.07};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{0.5, 0.64, 1}, 13};
					skyAroundSun[] = {{0.5, 0.64, 1}, 13.8};
					desiredLuminanceCoef = 0.6;
					desiredLuminanceCoefCloud = 1;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.2;
					rayleigh[] = {0.007, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.85, 0.9, 1}, 12.5};
					swBrightness = 1.7;
				};
				
				class Lighting10 {
					height = 0;
					overcast = 1;
					sunAngle = -15;
					sunOrMoon = 0;
					diffuse[] = {0.003, 0.004, 0.005};
					diffuseCloud[] = {0.003, 0.004, 0.005};
					ambient[] = {0.0125, 0.0125, 0.0125};
					ambientCloud[] = {0.0125, 0.0125, 0.009};
					groundReflection[] = {0.001, 0.001, 0.002};
					groundReflectionCloud[] = {0.001, 0.001, 0.002};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.012, 0.012, 0.012};
					skyAroundSun[] = {0.005, 0.005, 0.005};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.007, 0.01388, 0.02878};
					mie[] = {0.005, 0.005, 0.005};
					cloudsColor[] = {1, 1, 1};
					swBrightness = 24;
				};
				
				class Lighting32 {
					height = 0;
					overcast = 1;
					sunAngle = -12;
					sunOrMoon = 0;
					diffuse[] = {0.003, 0.004, 0.005};
					diffuseCloud[] = {0.003, 0.004, 0.005};
					ambient[] = {0.0125, 0.0125, 0.0125};
					ambientCloud[] = {0.0125, 0.0125, 0.009};
					groundReflection[] = {0.001, 0.001, 0.002};
					groundReflectionCloud[] = {0.001, 0.001, 0.002};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.012, 0.012, 0.012};
					skyAroundSun[] = {0.012, 0.012, 0.012};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.007, 0.01388, 0.02878};
					mie[] = {0.005, 0.005, 0.005};
					cloudsColor[] = {1, 1, 1};
					swBrightness = 24;
				};
				
				class Lighting33 {
					height = 0;
					overcast = 1;
					sunAngle = -11;
					sunOrMoon = 0;
					diffuse[] = {0.003, 0.004, 0.005};
					diffuseCloud[] = {0.003, 0.004, 0.005};
					ambient[] = {0.0125, 0.0125, 0.0125};
					ambientCloud[] = {0.0125, 0.0125, 0.009};
					groundReflection[] = {0.001, 0.001, 0.002};
					groundReflectionCloud[] = {0.001, 0.001, 0.002};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.012, 0.012, 0.012};
					skyAroundSun[] = {0.012, 0.012, 0.012};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.007, 0.01388, 0.02878};
					mie[] = {0.005, 0.005, 0.005};
					cloudsColor[] = {1, 1, 1};
					swBrightness = 24;
				};
				
				class Lighting34 {
					height = 0;
					overcast = 1;
					sunAngle = -10;
					sunOrMoon = 0.5;
					diffuse[] = {0.0075, 0.0075, 0.0075};
					diffuseCloud[] = {0.0075, 0.0075, 0.0075};
					ambient[] = {0.0075, 0.0075, 0.0075};
					ambientCloud[] = {0.0075, 0.0075, 0.0075};
					groundReflection[] = {0.001, 0.001, 0.002};
					groundReflectionCloud[] = {0.001, 0.001, 0.002};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.012, 0.012, 0.012};
					skyAroundSun[] = {0.012, 0.012, 0.012};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.007, 0.01388, 0.02878};
					mie[] = {0.005, 0.005, 0.005};
					cloudsColor[] = {1, 1, 1};
					swBrightness = 24;
				};
				
				class Lighting11 {
					height = 0;
					overcast = 1;
					sunAngle = -6;
					sunOrMoon = 1;
					diffuse[] = {0.0075, 0.0075, 0.0075};
					diffuseCloud[] = {0.0075, 0.0075, 0.0075};
					ambient[] = {0.0075, 0.0075, 0.0075};
					ambientCloud[] = {0.0075, 0.0075, 0.0075};
					groundReflection[] = {0, 0, 0};
					groundReflectionCloud[] = {0, 0, 0};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0.015, 0.015, 0.015};
					skyAroundSun[] = {0.015, 0.015, 0.015};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.007, 0.01388, 0.02878};
					mie[] = {0.005, 0.005, 0.005};
					cloudsColor[] = {0.5, 0.5, 0.5};
					swBrightness = 16;
				};
				
				class Lighting12 {
					height = 0;
					overcast = 1;
					sunAngle = -4.5;
					sunOrMoon = 1;
					diffuse[] = {0, 0, 0};
					diffuseCloud[] = {0, 0, 0};
					ambient[] = {0.075, 0.075, 0.075};
					ambientCloud[] = {0.075, 0.075, 0.075};
					groundReflection[] = {0.002, 0.002, 0.002};
					groundReflectionCloud[] = {0.002, 0.002, 0.002};
					bidirect[] = {0.0768, 0.07872, 0.0896};
					bidirectCloud[] = {0.0768, 0.07872, 0.0896};
					sky[] = {0.1, 0.1, 0.1};
					skyAroundSun[] = {{0.1, 0.1, 0.1}, 0.12};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.5, 0.5, 0.5}, 1};
					swBrightness = 16;
				};
				
				class Lighting13 {
					height = 0;
					overcast = 1;
					sunAngle = -3.75;
					sunOrMoon = 1;
					diffuse[] = {0.15, 0.15, 0.15};
					diffuseCloud[] = {0.15, 0.15, 0.15};
					ambient[] = {0.15, 0.15, 0.15};
					ambientCloud[] = {0.15, 0.15, 0.15};
					groundReflection[] = {0.002, 0.002, 0.002};
					groundReflectionCloud[] = {0.002, 0.002, 0.002};
					bidirect[] = {0.096, 0.0984, 0.112};
					bidirectCloud[] = {0.096, 0.0984, 0.112};
					sky[] = {0.582, 0.582, 0.582};
					skyAroundSun[] = {{0.582, 0.582, 0.582}, 0.25};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.5, 0.5, 0.5}, 4};
					swBrightness = 16;
				};
				
				class Lighting14 {
					height = 0;
					overcast = 1;
					sunAngle = -2.5;
					sunOrMoon = 1;
					diffuse[] = {{0.22, 0.322, 0.471}, 2};
					diffuseCloud[] = {{0.22, 0.322, 0.471}, 2};
					ambient[] = {{1.3, 0.9, 1}, 2.2};
					ambientCloud[] = {{1.3, 0.9, 1}, 2.2};
					groundReflection[] = {{1, 0.7, 0.7}, 0.8};
					groundReflectionCloud[] = {{1, 0.7, 0.7}, 0.8};
					bidirect[] = {0.12, 0.123, 0.14};
					bidirectCloud[] = {0.12, 0.123, 0.14};
					sky[] = {{0.582, 0.72, 0.887}, 4.83492};
					skyAroundSun[] = {{3.5, 1.64, 1}, 6.208};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1.3, 1, 1}, 8};
					swBrightness = 2;
				};
				
				class Lighting15 {
					height = 0;
					overcast = 1;
					sunAngle = 0;
					sunOrMoon = 1;
					diffuse[] = {{0.2, 0.23, 0.4}, 4.1};
					diffuseCloud[] = {{0.2, 0.23, 0.4}, 4.1};
					ambient[] = {{0.6, 0.23, 0.4}, 4.5};
					ambientCloud[] = {{0.6, 0.23, 0.4}, 4.5};
					groundReflection[] = {{0.3, 0.3, 0.3}, 2.6843};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 2.6843};
					bidirect[] = {0.03, 0.03, 0.03};
					bidirectCloud[] = {0.015, 0.015, 0.015};
					sky[] = {{1, 1, 1}, 6.04365};
					skyAroundSun[] = {{3.5, 1.64, 1}, 6.4};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.005, 0.005, 0.005};
					cloudsColor[] = {{3.5, 1, 1}, 10};
					swBrightness = 2;
				};
				
				class Lighting16 {
					height = 0;
					overcast = 1;
					sunAngle = 3;
					sunOrMoon = 1;
					diffuse[] = {{0.2, 0.23, 0.4}, 5.1};
					diffuseCloud[] = {{0.2, 0.23, 0.4}, 5.1};
					ambient[] = {{0.2, 0.23, 0.4}, 5.41};
					ambientCloud[] = {{0.2, 0.23, 0.4}, 5.41};
					groundReflection[] = {{0.3, 0.3, 0.3}, 3.35537};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 3.35537};
					bidirect[] = {0.03, 0.03, 0.03};
					bidirectCloud[] = {0.015, 0.015, 0.015};
					sky[] = {{1, 1, 1}, 7.8489};
					skyAroundSun[] = {{1, 1, 1}, 6.9768};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.005, 0.005, 0.005};
					cloudsColor[] = {{1, 1, 1}, 11.2943};
					swBrightness = 2;
				};
				
				class Lighting17 {
					height = 0;
					overcast = 1;
					sunAngle = 8;
					sunOrMoon = 1;
					diffuse[] = {{0.383, 0.58, 0.858}, 7.59773};
					diffuseCloud[] = {{0.383, 0.58, 0.858}, 7.59773};
					ambient[] = {{0.383, 0.58, 0.858}, 8.54744};
					ambientCloud[] = {{0.383, 0.58, 0.858}, 8.54744};
					groundReflection[] = {{0.3, 0.3, 0.3}, 4.69752};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 4.69752};
					bidirect[] = {0.03, 0.03, 0.03};
					bidirectCloud[] = {0.015, 0.015, 0.015};
					sky[] = {{1, 1, 1}, 8.721};
					skyAroundSun[] = {{1, 1, 1}, 8.721};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1, 1, 1}, 11.5248};
					swBrightness = 2;
				};
				
				class Lighting18 {
					height = 0;
					overcast = 1;
					sunAngle = 16;
					sunOrMoon = 1;
					diffuse[] = {{0.12, 0.18, 0.28}, 8.1696};
					diffuseCloud[] = {{0.12, 0.18, 0.28}, 8.1696};
					ambient[] = {{0.12, 0.18, 0.28}, 9.1908};
					ambientCloud[] = {{0.12, 0.18, 0.28}, 9.1908};
					groundReflection[] = {{0.3, 0.3, 0.3}, 5.106};
					groundReflectionCloud[] = {{0.15, 0.15, 0.15}, 5.106};
					bidirect[] = {0.03, 0.03, 0.03};
					bidirectCloud[] = {0.015, 0.015, 0.015};
					sky[] = {{1, 1, 1}, 9.18};
					skyAroundSun[] = {{1, 1, 1}, 9.69};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.85, 0.9, 1}, 11.76};
					swBrightness = 2;
				};
				
				class Lighting19 {
					height = 0;
					overcast = 1;
					sunAngle = 45;
					sunOrMoon = 1;
					diffuse[] = {{0.2, 0.27, 0.32}, 8.88};
					diffuseCloud[] = {{0.2, 0.27, 0.32}, 8.88};
					ambient[] = {{0.2, 0.27, 0.32}, 9.99};
					ambientCloud[] = {{0.2, 0.27, 0.32}, 9.99};
					groundReflection[] = {{0.2, 0.2, 0.15}, 5.55};
					groundReflectionCloud[] = {{0.1, 0.1, 0.075}, 5.55};
					bidirect[] = {0.03, 0.03, 0.03};
					bidirectCloud[] = {0.015, 0.015, 0.015};
					sky[] = {{1, 1, 1}, 10.2};
					skyAroundSun[] = {{1, 1, 1}, 10.2};
					desiredLuminanceCoef = 0.3;
					desiredLuminanceCoefCloud = 0.3;
					luminanceRectCoef = 0.4;
					luminanceRectCoefCloud = 0.4;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{0.85, 0.9, 1}, 12};
					swBrightness = 4;
				};
				
				class Lighting20 {
					height = -1;
					overcast = 0;
					sunAngle = -15;
					sunOrMoon = 0.5;
					diffuse[] = {0.005, 0.01, 0.01};
					diffuseCloud[] = {0, 0, 0};
					ambient[] = {0, 0.002, 0.003};
					ambientCloud[] = {0, 0, 0};
					groundReflection[] = {0, 0, 0};
					groundReflectionCloud[] = {0, 0, 0};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0, 0.002, 0.003};
					skyAroundSun[] = {0, 0.002, 0.003};
					desiredLuminanceCoef = 0;
					desiredLuminanceCoefCloud = 0;
					luminanceRectCoef = 1;
					luminanceRectCoefCloud = 1;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {0.5, 0.5, 0.5};
					swBrightness = 1;
				};
				
				class Lighting21 {
					height = -1;
					overcast = 0;
					sunAngle = 0;
					sunOrMoon = 0.5;
					diffuse[] = {{0.4, 0.5, 0.5}, 7};
					diffuseCloud[] = {{0.2, 0.5, 0.5}, 3.5};
					ambient[] = {{0.1, 0.2, 0.2}, 7};
					ambientCloud[] = {{0, 0.5, 1}, 3.5};
					groundReflection[] = {{0, 0.45, 0.4}, 2};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 1};
					bidirect[] = {0, 0.05, 0.07};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{0.1, 0.64, 1}, 6};
					skyAroundSun[] = {{0.5, 0.64, 1}, 10};
					desiredLuminanceCoef = 0.02;
					desiredLuminanceCoefCloud = 0.02;
					luminanceRectCoef = 1;
					luminanceRectCoefCloud = 1;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1.1, 1.1, 1.3}, 10.5};
					swBrightness = 6;
				};
				
				class Lighting22 {
					height = -1;
					overcast = 0;
					sunAngle = 45;
					sunOrMoon = 1;
					diffuse[] = {{0.5, 1.8, 2}, 12.8};
					diffuseCloud[] = {{0.2, 0.5, 0.5}, 6.4};
					ambient[] = {{0, 0.5, 0.6}, 10.3};
					ambientCloud[] = {{0, 0.5, 1}, 5.15};
					groundReflection[] = {{0, 0.45, 0.4}, 2.7};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 1.35};
					bidirect[] = {0, 0.05, 0.07};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{0.1, 0.64, 1}, 12};
					skyAroundSun[] = {{0.5, 0.64, 1}, 16.8};
					desiredLuminanceCoef = 0;
					desiredLuminanceCoefCloud = 0;
					luminanceRectCoef = 1;
					luminanceRectCoefCloud = 1;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1.1, 1.1, 1.3}, 10.5};
					swBrightness = 6;
				};
				
				class Lighting23 {
					height = -150;
					overcast = 0;
					sunAngle = -15;
					sunOrMoon = 0;
					diffuse[] = {0.005, 0.01, 0.01};
					diffuseCloud[] = {0, 0, 0};
					ambient[] = {0, 0.002, 0.003};
					ambientCloud[] = {0, 0, 0};
					groundReflection[] = {0, 0, 0};
					groundReflectionCloud[] = {0, 0, 0};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0, 0.002, 0.003};
					skyAroundSun[] = {0, 0.002, 0.003};
					desiredLuminanceCoef = 0;
					desiredLuminanceCoefCloud = 0;
					luminanceRectCoef = 1;
					luminanceRectCoefCloud = 1;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {0.5, 0.5, 0.5};
					swBrightness = 1;
				};
				
				class Lighting24 {
					height = -150;
					overcast = 0;
					sunAngle = 0;
					sunOrMoon = 0.5;
					diffuse[] = {{0.4, 0.5, 0.5}, 7};
					diffuseCloud[] = {{0.2, 0.5, 0.5}, 3.5};
					ambient[] = {{0.1, 0.2, 0.2}, 7};
					ambientCloud[] = {{0, 0.5, 1}, 3.5};
					groundReflection[] = {{0, 0.45, 0.4}, 2};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 1};
					bidirect[] = {0, 0.05, 0.07};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{0.1, 0.64, 1}, 6};
					skyAroundSun[] = {{0.5, 0.64, 1}, 10};
					desiredLuminanceCoef = 0.02;
					desiredLuminanceCoefCloud = 0.02;
					luminanceRectCoef = 1;
					luminanceRectCoefCloud = 1;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1.1, 1.1, 1.3}, 10.5};
					swBrightness = 6;
				};
				
				class Lighting25 {
					height = -150;
					overcast = 0;
					sunAngle = 45;
					sunOrMoon = 0.5;
					diffuse[] = {{0.5, 1.8, 2}, 12.8};
					diffuseCloud[] = {{0.2, 0.5, 0.5}, 6.4};
					ambient[] = {{0.2, 0.5, 1}, 10.3};
					ambientCloud[] = {{0, 0.5, 1}, 5.15};
					groundReflection[] = {{0, 0.45, 0.4}, 2.7};
					groundReflectionCloud[] = {{0.3, 0.3, 0.3}, 1.35};
					bidirect[] = {0, 0.05, 0.07};
					bidirectCloud[] = {0.03, 0.03, 0.03};
					sky[] = {{0.1, 0.64, 1}, 12};
					skyAroundSun[] = {{0.5, 0.64, 1}, 16.8};
					desiredLuminanceCoef = 0;
					desiredLuminanceCoefCloud = 0;
					luminanceRectCoef = 1;
					luminanceRectCoefCloud = 1;
					rayleigh[] = {0.00749, 0.01388, 0.02878};
					mie[] = {0.0046, 0.0046, 0.0046};
					cloudsColor[] = {{1.1, 1.1, 1.3}, 10.5};
					swBrightness = 6;
				};
				
				class Lighting26 {
					height = -300;
					overcast = 0;
					sunAngle = -15;
					sunOrMoon = 0;
					diffuse[] = {0, 0, 0};
					diffuseCloud[] = {0, 0, 0};
					ambient[] = {0, 0, 0};
					ambientCloud[] = {0, 0, 0};
					groundReflection[] = {0, 0, 0};
					groundReflectionCloud[] = {0, 0, 0};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0, 0, 0};
					skyAroundSun[] = {0, 0, 0};
					desiredLuminanceCoef = 0;
					desiredLuminanceCoefCloud = 0;
					luminanceRectCoef = 1;
					luminanceRectCoefCloud = 1;
					rayleigh[] = {0, 0, 0};
					mie[] = {0, 0, 0};
					cloudsColor[] = {0, 0, 0};
					swBrightness = 0;
				};
				
				class Lighting27 {
					height = -300;
					overcast = 0;
					sunAngle = 0;
					sunOrMoon = 0;
					diffuse[] = {0, 0, 0};
					diffuseCloud[] = {0, 0, 0};
					ambient[] = {0, 0, 0};
					ambientCloud[] = {0, 0, 0};
					groundReflection[] = {0, 0, 0};
					groundReflectionCloud[] = {0, 0, 0};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0, 0, 0};
					skyAroundSun[] = {0, 0, 0};
					desiredLuminanceCoef = 0;
					desiredLuminanceCoefCloud = 0;
					luminanceRectCoef = 1;
					luminanceRectCoefCloud = 1;
					rayleigh[] = {0, 0, 0};
					mie[] = {0, 0, 0};
					cloudsColor[] = {0, 0, 0};
					swBrightness = 0;
				};
				
				class Lighting28 {
					height = -300;
					overcast = 0;
					sunAngle = 45;
					sunOrMoon = 0;
					diffuse[] = {0, 0, 0};
					diffuseCloud[] = {0, 0, 0};
					ambient[] = {0, 0, 0};
					ambientCloud[] = {0, 0, 0};
					groundReflection[] = {0, 0, 0};
					groundReflectionCloud[] = {0, 0, 0};
					bidirect[] = {0, 0, 0};
					bidirectCloud[] = {0, 0, 0};
					sky[] = {0, 0, 0};
					skyAroundSun[] = {0, 0, 0};
					desiredLuminanceCoef = 0;
					desiredLuminanceCoefCloud = 0;
					luminanceRectCoef = 1;
					luminanceRectCoefCloud = 1;
					rayleigh[] = {0, 0, 0};
					mie[] = {0, 0, 0};
					cloudsColor[] = {0, 0, 0};
					swBrightness = 0;
				};
			};
			
			class Lighting : Lighting {
				class BrightAlmost : DayLightingBrightAlmost {
					overcast = 0.25;
				};
			};
			
			class Overcast : Overcast {
				class Weather1 : Weather1 {
					sky = "DZ\Data\data\sky_veryclear_sky.paa";
					skyR = "DZ\Data\data\sky_veryclear_lco.paa";
					horizon = "DZ\Data\data\sky_veryclear_horizont_sky.paa";
					overcast = 0;
					alpha = 0;
					size = 0.1;
					height = 1.0;
					bright = 0.9;
					speed = 0;
					through = 1.0;
					diffuse = 1.0;
					cloudDiffuse = 0.95;
					waves = 0.2;
					lightingOvercast = 0.0;
				};
				
				class Weather2 : Weather2 {
					sky = "DZ\Data\data\sky_almostclear_sky.paa";
					skyR = "DZ\Data\data\sky_almostclear_lco.paa";
					horizon = "DZ\Data\data\sky_almostclear_horizont_sky.paa";
					overcast = 0.25;
					alpha = 0;
					size = 0.3;
					height = 0.9;
					bright = 0.8;
					speed = 0.25;
					through = 1.0;
					lightingOvercast = 0.1;
					diffuse = 1.0;
					waves = 0.22;
				};
				
				class Weather3 : Weather3 {
					sky = "DZ\Data\data\sky_semicloudy_sky.paa";
					skyR = "DZ\Data\data\sky_semicloudy_lco.paa";
					horizon = "DZ\Data\data\sky_semicloudy_horizont_sky.paa";
					overcast = 0.4;
					alpha = 0;
					size = 0.5;
					height = 0.8;
					bright = 0.6;
					speed = 0.45;
					through = 0.7;
					lightingOvercast = 0.5;
					diffuse = 0.8;
					waves = 0.32;
				};
				
				class Weather4 : Weather4 {
					sky = "DZ\Data\data\sky_cloudy_sky.paa";
					skyR = "DZ\Data\data\sky_cloudy_lco.paa";
					horizon = "DZ\Data\data\sky_cloudy_horizont_sky.paa";
					overcast = 0.6;
					alpha = 0.3;
					size = 0.65;
					height = 0.75;
					bright = 0.5;
					speed = 0.55;
					through = 0.4;
					lightingOvercast = 0.85;
					diffuse = 0.6;
					waves = 0.32;
				};
				
				class Weather5 : Weather5 {
					sky = "DZ\Data\data\sky_mostlycloudy_sky.paa";
					skyR = "DZ\Data\data\sky_mostlycloudy_lco.paa";
					horizon = "DZ\Data\data\sky_mostlycloudy_horizont_sky.paa";
					overcast = 0.9;
					alpha = 0.3;
					size = 0.8;
					height = 0.7;
					bright = 0.1;
					speed = 0.75;
					through = 0;
					lightingOvercast = 0.98;
					diffuse = 0.3;
					waves = 0.52;
				};
				
				class Weather6 : Weather5 {
					sky = "DZ\Data\data\sky_overcast_sky.paa";
					skyR = "DZ\Data\data\sky_overcast_lco.paa";
					horizon = "DZ\Data\data\sky_overcast_horizont_sky.paa";
					overcast = 1.0;
					alpha = 0.3;
					bright = 0.1;
					size = 1.0;
					height = 0.6;
					speed = 0.95;
					through = 0;
					lightingOvercast = 0.98;
					diffuse = 0.1;
					waves = 0.7;
				};
			};
			
			class ThunderboltNorm {
				model = "\DZ\Data\data\blesk1.p3d";
				soundNear[] = {"\dz\sounds\arma2\sfx\thunder01", 1, 1};
				soundFar[] = {"\dz\sounds\arma2\sfx\thunder02", 1, 1};
			};
			
			class ThunderboltHeavy {
				model = "\DZ\Data\data\blesk2.p3d";
				soundNear[] = {"\dz\sounds\arma2\sfx\thunder09hard", 1, 1};
				soundFar[] = {"\dz\sounds\arma2\sfx\thunder10hard", 1, 1};
			};
		};
		
		class Rain {
			texture = "DZ\Data\data\rain_ca.paa";
			raindrop = "\DZ\Data\data\raindrop.p3d";
			speed = 1;
			levels[] = {8, 2};
		};
		envTexture = "DZ\Data\data\env_co.paa";
		skyTexture = "DZ\Data\data\sky_semicloudy_sky.paa";
		skyTextureR = "DZ\Data\data\sky_semicloudy_lco.paa";
		seaTexture = "DZ\Data\data\seatexture_co.paa";
		clouds[] = {"DZ\Data\data\mrak1.p3d", "DZ\Data\data\mrak2.p3d", "DZ\Data\data\mrak3.p3d", "DZ\Data\data\mrak4.p3d"};
		skyObject = "DZ\Data\data\obloha.p3d";
		starsObject = "DZ\Data\data\stars.p3d";
		pointObject = "DZ\Data\data\point.p3d";
		horizontObject = "DZ\Data\data\horizont.p3d";
		haloObject = "DZ\Data\data\sunHalo.p3d";
		sunObject = "DZ\Data\data\sun.p3d";
		rainbowObject = "DZ\Data\data\rainbow.p3d";
		moonObject = "DZ\Data\data\moon.p3d";
		hazeDistCoef = 0.0;
		hazeFogCoef = 1.0;
		satelliteNormalBlendStart = 100;
		satelliteNormalBlendEnd = 500;
	};
};

class CfgMaterials {
	class Water {
		PixelShaderID = "Water";
		VertexShaderID = "Water";
		ambient[] = {0.0705882, 0.172549, 0.145098, 0.4};
		diffuse[] = {0.0705882, 0.172549, 0.145098, 1};
		forcedDiffuse[] = {0.0264, 0.03, 0.013, 0};
		specular[] = {1.5, 1.5, 1.5, 0};
		specularPower = 4;
		emmisive[] = {0, 0, 0, 0};
		
		class Stage1 {
			texture = "DZ\Data\data\water_nofhq.paa";
			uvSource = "texWaterAnim";
			
			class uvTransform {
				aside[] = {0, 1, 0};
				up[] = {1, 0, 0};
				dir[] = {0, 0, 1};
				pos[] = {0.3, 0.4, 0};
			};
		};
		
		class Stage2 {
			texture = "DZ\Data\data\sea_foam_lco.paa";
			uvSource = "none";
		};
		
		class Stage3 {
			texture = "DZ\Data\data\water2_nohq.paa";
			uvSource = "none";
		};
	};
	
	class Shore {
		PixelShaderID = "Shore";
		VertexShaderID = "Shore";
		ambient[] = {0.0705882, 0.172549, 0.145098, 0.4};
		diffuse[] = {0.0705882, 0.172549, 0.145098, 1};
		forcedDiffuse[] = {0.0264, 0.03, 0.013, 0};
		specular[] = {1.5, 1.5, 1.5, 0};
		specularPower = 4;
		emmisive[] = {0, 0, 0, 0};
		
		class Stage1 {
			texture = "DZ\Data\data\water_nofhq.paa";
			uvSource = "texWaterAnim";
			
			class uvTransform {
				aside[] = {0, 1, 0};
				up[] = {0.1, 0, 0};
				dir[] = {0, 0, 1};
				pos[] = {0.3, 0.4, 0};
			};
		};
		
		class Stage2 {
			texture = "DZ\Data\data\sea_foam_lco.paa";
			uvSource = "none";
		};
		
		class Stage3 {
			texture = "DZ\Data\data\water2_nohq.paa";
			uvSource = "none";
		};
	};
	
	class ShoreWet {
		PixelShaderID = "ShoreWet";
		VertexShaderID = "Shore";
	};
};

class CfgDifficulties {
	class Recruit {
		displayName = "Recruit";
		scoreImage = "#(argb,8,8,3)color(1,1,1,1)";
		badScoreImage = "#(argb,8,8,3)color(1,1,1,1)";
		skillFriendly = 1;
		precisionFriendly = 1;
		skillEnemy = 0.55;
		precisionEnemy = 0.3;
		myArmorCoef = 4.0;
		peripheralVisionAid = 0.85;
		visionAid = 0.85;
		
		class Flags {
			friendlyTag[] = {0, 1};
			tracers[] = {1, 1};
			unlimitedSaves[] = {1, 1};
			roughLanding[] = {1, 1};
			windEnabled[] = {0, 1};
			autoTrimEnabled[] = {1, 1};
			stressDamageEnabled[] = {0, 1};
		};
		overviewText = "";
		overviewPicture = "";
	};
	
	class Regular {
		displayName = "Regular";
		scoreImage = "#(argb,8,8,3)color(1,1,1,1)";
		badScoreImage = "#(argb,8,8,3)color(1,1,1,1)";
		skillFriendly = 1;
		precisionFriendly = 1;
		skillEnemy = 0.7;
		precisionEnemy = 0.5;
		peripheralVisionAid = 0.75;
		visionAid = 0;
		
		class Flags {
			friendlyTag[] = {0, 1};
			tracers[] = {1, 1};
			roughLanding[] = {0, 1};
			windEnabled[] = {1, 1};
			autoTrimEnabled[] = {1, 1};
			stressDamageEnabled[] = {1, 1};
		};
		overviewText = "";
		overviewPicture = "";
	};
	
	class Veteran {
		displayName = "Veteran";
		scoreImage = "#(argb,8,8,3)color(1,1,1,1)";
		badScoreImage = "#(argb,8,8,3)color(1,1,1,1)";
		skillFriendly = 1.0;
		precisionFriendly = 1.0;
		skillEnemy = 0.9;
		precisionEnemy = 0.75;
		myArmorCoef = 1.0;
		groupArmorCoef = 1.0;
		autoAimSizeFactor = 0.3;
		autoAimDistance = 0.6;
		autoAimAngle = 2.5;
		peripheralVisionAid = 0.65;
		
		class Flags {
			hudWpPerm[] = {0, 0};
			map[] = {0, 1};
			clockIndicator[] = {0, 1};
			tracers[] = {0, 0};
			unlimitedSaves[] = {0, 1};
			deathMessages[] = {1, 1};
			hudGroupInfo[] = {0, 1};
			roughLanding[] = {0, 0};
			windEnabled[] = {1, 0};
			autoTrimEnabled[] = {0, 0};
			stressDamageEnabled[] = {1, 0};
		};
		overviewText = "";
		overviewPicture = "";
	};
};

class CfgSurfaces {
	class Default;	// External class reference
	class Water;	// External class reference
	
	class DZ_Default : Default {
		interior = 0;
		footDamage = 0.02;
		friction = 0.5;
		restitution = 0.1;
		
		class Visible {
			prone = 1;
			kneel = 1;
			stand = 1;
		};
	};
	
	class DZ_Interior : Default {
		interior = 1;
		footDamage = 0.02;
		friction = 0.8;
		restitution = 0.3;
		
		class Visible {
			prone = 1;
			kneel = 1;
			stand = 1;
		};
	};
	
	class Roadway : DZ_Default {
		files = "silnice*";
		rough = 0.005;
		dust = 0.01;
		friction = 0.94;
		restitution = 0.48;
		soundEnviron = "road";
	};
	
	class Asfalt : Roadway {
		files = "asfalt*";
		rough = 0.01;
		dust = 0.05;
		friction = 0.9;
		restitution = 0.45;
	};
	
	class Cesta : Roadway {
		files = "cesta*";
		rough = 0.08;
		dust = 0.15;
		friction = 0.85;
		restitution = 0.4;
		soundEnviron = "dirt";
		footDamage = 0.1;
	};
	
	class Runway : DZ_Default {
		files = "dz/roads2/runway*";
		rough = 0.005;
		dust = 0.01;
		friction = 0.98;
		restitution = 0.5;
		soundEnviron = "road";
	};
	
	class Rost : DZ_Default {
		files = "rost*";
		rough = 0.001;
		dust = 0.001;
		friction = 0.7;
		restitution = 0.52;
		soundEnviron = "steel";
	};
	
	class Sterk : DZ_Default {
		files = "sterk*";
		rough = 0.08;
		dust = 0.15;
		friction = 0.6;
		restitution = 0.24;
		soundEnviron = "gravel";
		footDamage = 0.1;
		
		class Visible : Visible {
			prone = 0.95;
		};
	};
	
	class SterkBIG : DZ_Default {
		files = "sterkBIG*";
		rough = 0.08;
		dust = 0.15;
		friction = 0.65;
		restitution = 0.28;
		soundEnviron = "gravel2";
		footDamage = 0.1;
		
		class Visible : Visible {
			prone = 0.95;
		};
	};
	
	class Sutiny : DZ_Default {
		files = "sutiny*";
		rough = 0.08;
		dust = 0.15;
		friction = 0.58;
		restitution = 0.22;
		soundEnviron = "gravel2";
		footDamage = 0.1;
		
		class Visible : Visible {
			prone = 0.95;
		};
	};
	
	class Wood_ext : DZ_Default {
		files = "prknaout*";
		rough = 0.1;
		dust = 0.1;
		friction = 0.72;
		restitution = 0.29;
		soundEnviron = "wood";
	};
	
	class Wood_ext_stairs : Wood_ext {
		files = "stairs_prknaout*";
		isStairs = 1;
	};
	
	class Metal : DZ_Default {
		files = "plechprolis*";
		rough = 0.1;
		dust = 0.1;
		friction = 0.6;
		restitution = 0.19;
		soundEnviron = "steel";
		impact = "Impact_Metal";
		footDamage = 0.05;
	};
	
	class Metal_stairs : Metal {
		files = "stairs_plechprolis*";
		isStairs = 1;
		friction = 0.55;
		restitution = 0.18;
	};
	
	class Iron : Metal {
		files = "ocel*";
		friction = 0.75;
		restitution = 0.41;
		soundEnviron = "metal";
	};
	
	class Wave_plate : Metal {
		files = "vlnityplech*";
		friction = 0.56;
		restitution = 0.58;
		soundEnviron = "wave_plate";
	};
	
	class Beton : DZ_Default {
		files = "kameny";
		rough = 0.1;
		dust = 0.1;
		friction = 0.93;
		restitution = 0.48;
		soundEnviron = "concrete_ext";
	};
	
	class Beton_stairs : Beton {
		files = "stairs_kameny*";
		isStairs = 1;
		friction = 0.95;
		restitution = 0.43;
	};
	
	class BetonNew : Beton {
		files = "beton*";
		rough = 0.005;
		dust = 0.01;
		soundEnviron = "road";
	};
	
	class BetonIN : BetonNew {
		files = "chodba_beton*";
		interior = 1;
	};
	
	class Carpet : DZ_Default {
		files = "dum_mesto_koberec*";
		rough = 0.1;
		dust = 0.1;
		friction = 0.89;
		restitution = 0.23;
		soundEnviron = "carpet";
		footDamage = 0.01;
	};
	
	class Carpet2 : Carpet {
		files = "koberec*";
	};
	
	class SandBuilding : DZ_Default {
		files = "pisek*";
		rough = 0.1;
		dust = 0.5;
		friction = 0.39;
		restitution = 0.14;
		soundEnviron = "sand";
		footDamage = 0.05;
	};
	
	class MudBuilding : DZ_Default {
		files = "hlinasterk*";
		rough = 0.1;
		dust = 0.5;
		friction = 0.29;
		restitution = 0.24;
		soundEnviron = "dirt";
		footDamage = 0.05;
	};
	
	class MudBuilding_stairs : MudBuilding {
		files = "stairs_hlinasterk*";
		isStairs = 1;
	};
	
	class Hlina : DZ_Default {
		files = "hlina*";
		rough = 0.1;
		dust = 0.5;
		friction = 0.34;
		restitution = 0.12;
		soundEnviron = "dirt";
		footDamage = 0.05;
	};
	
	class Odpadky : DZ_Default {
		files = "odpadky*";
		soundEnviron = "gravel2";
		friction = 0.79;
		restitution = 0.1;
		footDamage = 0.1;
		
		class Visible : Visible {
			prone = 0.9;
		};
	};
	
	class SandGeneral : DZ_Default {
		files = "pisek01*";
		rough = 0.1;
		dust = 0.5;
		friction = 0.26;
		restitution = 0.11;
		soundEnviron = "sand";
		footDamage = 0.05;
	};
	
	class PrknaINT : DZ_Interior {
		files = "prknain*";
		rough = 0.1;
		dust = 0.1;
		friction = 0.56;
		restitution = 0.26;
		soundEnviron = "wood_int";
	};
	
	class PrknaINT_stairs : PrknaINT {
		files = "stairs_prknain*";
		isStairs = 1;
	};
	
	class Parkety : DZ_Interior {
		files = "parkety*";
		rough = 0.005;
		dust = 0.001;
		friction = 0.56;
		restitution = 0.26;
		soundEnviron = "parkety";
	};
	
	class Lino : DZ_Interior {
		files = "lino*";
		rough = 0.001;
		dust = 0.001;
		friction = 0.46;
		restitution = 0.32;
		soundEnviron = "wood";
	};
	
	class DlazbaIN : DZ_Interior {
		files = "dlazbain*";
		rough = 0.005;
		dust = 0.01;
		friction = 0.66;
		restitution = 0.41;
		soundEnviron = "road";
		footDamage = 0.1;
	};
	
	class DlazbaOUT : DZ_Interior {
		files = "dlazbaout*";
		rough = 0.005;
		dust = 0.01;
		friction = 0.66;
		restitution = 0.41;
		soundEnviron = "road";
		footDamage = 0.1;
	};
	
	class Tasky : DZ_Interior {
		files = "tasky*";
		rough = 0.001;
		dust = 0.001;
		friction = 0.58;
		restitution = 0.27;
		soundEnviron = "tasky";
	};
	
	class Lepenka : DZ_Interior {
		files = "lepenka*";
		rough = 0.001;
		dust = 0.001;
		friction = 0.78;
		restitution = 0.24;
		soundEnviron = "lepenka";
	};
	
	class Hallway : DZ_Interior {
		files = "podldlzin02*";
		rough = 0.1;
		dust = 0.1;
		friction = 0.57;
		restitution = 0.36;
		soundEnviron = "hallway";
	};
	
	class Plech : DZ_Interior {
		files = "plech*";
		rough = 0.1;
		dust = 0.1;
		friction = 0.68;
		restitution = 0.41;
		soundEnviron = "steel";
		impact = "Impact_Metal";
		footDamage = 0.1;
	};
	
	class Plech_stairs : Plech {
		files = "stairs_plech*";
		isStairs = 1;
	};
	
	class Wood : DZ_Interior {
		files = "podlaha_prkna*";
		rough = 0.1;
		dust = 0.1;
		friction = 0.72;
		restitution = 0.27;
		soundEnviron = "wood";
	};
	
	class ParquetIN : Default {
		access = ReadOnly;
		files = "parquetin*";
		rough = 0.005;
		dust = 0.001;
		soundEnviron = "parkety";
		character = "Empty";
		interior = 1;
		
		class Visible {
			prone = 1;
			kneel = 1;
			stand = 1;
		};
		audibility = 1.0;
		footDamage = 0.02;
	};
};

class CfgSlots {
	class Slot_Shoulder {
		priority = 1;
		name = "Shoulder";
		displayName = "Shoulder";
	};
	
	class Slot_Melee {
		priority = 2;
		name = "Melee";
		displayName = "Melee";
	};
	
	class Slot_Bow {
		priority = 3;
		name = "Bow";
		displayName = "Bow";
	};
	
	class Slot_Headgear {
		priority = 4;
		name = "Headgear";
		displayName = "Headgear";
	};
	
	class Slot_Mask {
		priority = 5;
		name = "Mask";
		displayName = "Mask";
	};
	
	class Slot_Eyewear {
		priority = 6;
		name = "Eyewear";
		displayName = "Eyewear";
	};
	
	class Slot_Hands {
		priority = 7;
		name = "Hands";
		displayName = "Hands";
	};
	
	class Slot_Gloves {
		priority = 8;
		name = "Gloves";
		displayName = "Gloves";
	};
	
	class Slot_Armband {
		priority = 9;
		name = "Armband";
		displayName = "Armband";
	};
	
	class Slot_Vest {
		priority = 10;
		name = "Vest";
		displayName = "Vest";
	};
	
	class Slot_Body {
		priority = 11;
		name = "Body";
		displayName = "Body";
	};
	
	class Slot_Back {
		priority = 12;
		name = "Back";
		displayName = "Back";
	};
	
	class Slot_Hips {
		priority = 13;
		name = "Hips";
		displayName = "Hips";
	};
	
	class Slot_Legs {
		priority = 14;
		name = "Legs";
		displayName = "Legs";
	};
	
	class Slot_Feet {
		priority = 15;
		name = "Feet";
		displayName = "Feet";
	};
	
	class Slot_magazine {
		priority = 16;
		name = "magazine";
		displayName = "magazine";
	};
	
	class Slot_magazine2 {
		priority = 17;
		name = "magazine2";
		displayName = "magazine2";
	};
	
	class Slot_magazine3 {
		priority = 18;
		name = "magazine3";
		displayName = "magazine3";
	};
	
	class Slot_Muzzle1 {
		priority = 19;
		name = "Muzzle1";
		displayName = "Muzzle1";
	};
	
	class Slot_Muzzle2 {
		priority = 20;
		name = "Muzzle2";
		displayName = "Muzzle2";
	};
	
	class Slot_Muzzle3 {
		priority = 21;
		name = "Muzzle3";
		displayName = "Muzzle3";
	};
	
	class Slot_BarbedWire {
		name = "BarbedWire";
		displayName = "BarbedWire";
	};
	
	class Slot_BarbedWireLeft {
		name = "BarbedWireLeft";
		displayName = "Left-side barbed wire";
		selection = "barbwire_left";
	};
	
	class Slot_BarbedWireRight {
		name = "BarbedWireRight";
		displayName = "Right-side barbed wire";
		selection = "barbwire_right";
	};
	
	class Slot_BarbedWireFront {
		name = "BarbedWireFront";
		displayName = "Front-side barbed wire";
		selection = "barbwire_front";
	};
	
	class Slot_BatteryD {
		name = "BatteryD";
		displayName = "BatteryD";
	};
	
	class Slot_BirchBark {
		name = "BirchBark";
		displayName = "BirchBark";
	};
	
	class Slot_Book {
		name = "Book";
		displayName = "Book";
	};
	
	class Slot_ButaneTorchCanister {
		name = "ButaneTorchCanister";
		displayName = "ButaneTorchCanister";
	};
	
	class Slot_CableReel {
		name = "CableReel";
		displayName = "CableReel";
	};
	
	class Slot_CamoNet {
		name = "CamoNet";
		displayName = "CamoNet";
	};
	
	class Slot_CookingBase {
		name = "CookingBase";
		displayName = "CookingBase";
	};
	
	class Slot_CookingEquipment {
		name = "CookingEquipment";
		displayName = "CookingEquipment";
	};
	
	class Slot_CookingTripod {
		name = "CookingTripod";
		displayName = "CookingTripod";
	};
	
	class Slot_DBHelmetMouth {
		name = "DBHelmetMouth";
		displayName = "DBHelmetMouth";
	};
	
	class Slot_DBHelmetVisor {
		name = "DBHelmetVisor";
		displayName = "DBHelmetVisor";
	};
	
	class Slot_Firewood {
		name = "Firewood";
		displayName = "Firewood";
	};
	
	class Slot_GasCanister {
		name = "GasCanister";
		displayName = "GasCanister";
	};
	
	class Slot_Glass {
		name = "Glass";
		displayName = "Glass";
	};
	
	class Slot_Hook {
		name = "Hook";
		displayName = "Hook";
	};
	
	class Slot_Ingredient {
		name = "Ingredient";
		displayName = "Ingredient";
	};
	
	class Slot_Knife {
		name = "Knife";
		displayName = "Knife";
	};
	
	class Slot_Lights {
		name = "Lights";
		displayName = "Lights";
	};
	
	class Slot_MedicalBandage {
		name = "MedicalBandage";
		displayName = "MedicalBandage";
	};
	
	class Slot_MetalPlates {
		name = "MetalPlates";
		displayName = "MetalPlates";
	};
	
	class Slot_Nails {
		name = "Nails";
		displayName = "Nails";
	};
	
	class Slot_OakBark {
		name = "OakBark";
		displayName = "OakBark";
	};
	
	class Slot_Paper {
		name = "Paper";
		displayName = "Paper";
	};
	
	class Slot_Pistol {
		name = "Pistol";
		displayName = "Pistol";
	};
	
	class Slot_Rags {
		name = "Rags";
		displayName = "Rags";
	};
	
	class Slot_Stones {
		name = "Stones";
		displayName = "Stones";
	};
	
	class Slot_WoodenPlanks {
		name = "WoodenPlanks";
		displayName = "WoodenPlanks";
	};
	
	class Slot_WoodenStick {
		name = "WoodenStick";
		displayName = "WoodenStick";
	};
	
	class Slot_bait {
		name = "bait";
		displayName = "bait";
	};
	
	class Slot_magazineFakeWeapon {
		name = "magazineFakeWeapon";
		displayName = "magazineFakeWeapon";
	};
	
	class Slot_matchinside {
		name = "matchinside";
		displayName = "matchinside";
	};
	
	class Slot_optic_acog {
		name = "optic_acog";
		displayName = "optic_acog";
	};
	
	class Slot_pistolFlashlight {
		name = "pistolFlashlight";
		displayName = "pistolFlashlight";
	};
	
	class Slot_pistolMuzzle {
		name = "pistolMuzzle";
		displayName = "pistolMuzzle";
	};
	
	class Slot_pistolOptics {
		name = "pistolOptics";
		displayName = "pistolOptics";
	};
	
	class Slot_suppressorImpro {
		name = "suppressorImpro";
		displayName = "suppressorImpro";
	};
	
	class Slot_tripWireAttachment {
		name = "tripWireAttachment";
		displayName = "tripWireAttachment";
	};
	
	class Slot_weaponBayonet {
		name = "weaponBayonet";
		displayName = "weaponBayonet";
	};
	
	class Slot_weaponBayonetAK {
		name = "weaponBayonetAK";
		displayName = "weaponBayonetAK";
	};
	
	class Slot_weaponBayonetMosin {
		name = "weaponBayonetMosin";
		displayName = "weaponBayonetMosin";
	};
	
	class Slot_weaponBayonetSKS {
		name = "weaponBayonetSKS";
		displayName = "weaponBayonetSKS";
	};
	
	class Slot_weaponBipod {
		name = "weaponBipod";
		displayName = "weaponBipod";
	};
	
	class Slot_weaponButtstockAK {
		name = "weaponButtstockAK";
		displayName = "weaponButtstockAK";
	};
	
	class Slot_weaponButtstockFal {
		name = "weaponButtstockFal";
		displayName = "weaponButtstockFal";
	};
	
	class Slot_weaponButtstockM4 {
		name = "weaponButtstockM4";
		displayName = "weaponButtstockM4";
	};
	
	class Slot_weaponButtstockMP5 {
		name = "weaponButtstockMP5";
		displayName = "weaponButtstockMP5";
	};
	
	class Slot_weaponButtstockRed9 {
		name = "weaponButtstockRed9";
		displayName = "weaponButtstockRed9";
	};
	
	class Slot_weaponButtstockSaiga {
		name = "weaponButtstockSaiga";
		displayName = "weaponButtstockSaiga";
	};
	
	class Slot_weaponFlashlight {
		name = "weaponFlashlight";
		displayName = "weaponFlashlight";
	};
	
	class Slot_weaponHandguardAK {
		name = "weaponHandguardAK";
		displayName = "weaponHandguardAK";
	};
	
	class Slot_weaponHandguardM4 {
		name = "weaponHandguardM4";
		displayName = "weaponHandguardM4";
	};
	
	class Slot_weaponHandguardMP5 {
		name = "weaponHandguardMP5";
		displayName = "weaponHandguardMP5";
	};
	
	class Slot_weaponHandguardM249 {
		name = "weaponHandguardM249";
		displayName = "weaponHandguardM249";
	};
	
	class Slot_weaponMuzzle {
		name = "weaponMuzzle";
		displayName = "weaponMuzzle";
	};
	
	class Slot_weaponMuzzleAK {
		name = "weaponMuzzleAK";
		displayName = "weaponMuzzleAK";
	};
	
	class Slot_weaponMuzzleM4 {
		name = "weaponMuzzleM4";
		displayName = "weaponMuzzleM4";
	};
	
	class Slot_weaponMuzzleMP5 {
		name = "weaponMuzzleMP5";
		displayName = "weaponMuzzleMP5";
	};
	
	class Slot_weaponMuzzleMosin {
		name = "weaponMuzzleMosin";
		displayName = "weaponMuzzleMosin";
	};
	
	class Slot_weaponOptics {
		name = "weaponOptics";
		displayName = "weaponOptics";
	};
	
	class Slot_weaponOpticsAK {
		name = "weaponOpticsAK";
		displayName = "weaponOpticsAK";
	};
	
	class Slot_weaponOpticsCrossbow {
		name = "weaponOpticsCrossbow";
		displayName = "weaponOpticsCrossbow";
	};
	
	class Slot_weaponOpticsHunting {
		name = "weaponOpticsHunting";
		displayName = "weaponOpticsHunting";
	};
	
	class Slot_weaponOpticsLRS {
		name = "weaponOpticsLRS";
		displayName = "weaponOpticsLRS";
	};
	
	class Slot_weaponOpticsMosin {
		name = "weaponOpticsMosin";
		displayName = "weaponOpticsMosin";
	};
	
	class Slot_weaponWrap {
		name = "weaponWrap";
		displayName = "weaponWrap";
	};
	
	class Slot_GlowPlug {
		name = "GlowPlug";
		displayName = "GlowPlug";
	};
	
	class Slot_SparkPlug {
		name = "SparkPlug";
		displayName = "SparkPlug";
	};
	
	class Slot_EngineBelt {
		name = "EngineBelt";
		displayName = "EngineBelt";
	};
	
	class Slot_CarBattery {
		name = "CarBattery";
		displayName = "CarBattery";
	};
	
	class Slot_TruckBattery {
		name = "TruckBattery";
		displayName = "TruckBattery";
	};
	
	class Slot_LightBulb {
		name = "LightBulb";
		displayName = "LightBulb";
	};
	
	class Slot_TruckRadiator {
		name = "TruckRadiator";
		displayName = "TruckRadiator";
	};
	
	class Slot_CarRadiator {
		name = "CarRadiator";
		displayName = "CarRadiator";
	};
	
	class Slot_V3SWheel_1_1 {
		name = "V3SWheel_1_1";
		displayName = "Front Left V3S Wheel";
		selection = "wheel_1_1_hide";
	};
	
	class Slot_V3SWheel_1_2 {
		name = "V3SWheel_1_2";
		displayName = "Back Left V3S Wheel";
		selection = "wheel_1_2_hide";
	};
	
	class Slot_V3SWheel_1_3 {
		name = "V3SWheel_1_3";
		displayName = "Middle Right V3S Wheel";
		selection = "wheel_1_3_hide";
	};
	
	class Slot_V3SWheel_2_1 {
		name = "V3SWheel_2_1";
		displayName = "Front Right V3S Wheel";
		selection = "wheel_2_1_hide";
	};
	
	class Slot_V3SWheel_2_2 {
		name = "V3SWheel_2_2";
		displayName = "Back Right V3S Wheel";
		selection = "wheel_2_2_hide";
	};
	
	class Slot_V3SWheel_2_3 {
		name = "V3SWheel_2_3";
		displayName = "Middle Right V3S Wheel";
		selection = "wheel_2_3_hide";
	};
	
	class Slot_V3SWheel_Spare_1 {
		name = "V3SWheel_Spare_1";
		displayName = "Spare Left V3S Wheel";
		selection = "wheel_spare_1";
	};
	
	class Slot_V3SWheel_Spare_2 {
		name = "V3SWheel_Spare_2";
		displayName = "Spare Right V3S Wheel";
		selection = "wheel_spare_2";
	};
	
	class Slot_V3SHood {
		name = "V3SHood";
		displayName = "V3SHood";
	};
	
	class Slot_V3SDriverDoors {
		name = "V3SDriverDoors";
		displayName = "V3SDriverDoors";
	};
	
	class Slot_V3SCoDriverDoors {
		name = "V3SCoDriverDoors";
		displayName = "V3SCoDriverDoors";
	};
	
	class Slot_NivaWheel_1_1 {
		name = "NivaWheel_1_1";
		displayName = "Front Left Niva Wheel";
		selection = "wheel_1_1_hide";
	};
	
	class Slot_NivaWheel_1_2 {
		name = "NivaWheel_1_2";
		displayName = "Front Right Niva Wheel";
		selection = "wheel_1_2_hide";
	};
	
	class Slot_NivaWheel_2_1 {
		name = "NivaWheel_2_1";
		displayName = "Front Left Niva Wheel";
		selection = "wheel_2_1_hide";
	};
	
	class Slot_NivaWheel_2_2 {
		name = "NivaWheel_2_2";
		displayName = "Front Right Niva Wheel";
		selection = "wheel_2_2_hide";
	};
	
	class Slot_NivaWheel_Spare_1 {
		name = "NivaWheel_Spare_1";
		displayName = "Spare Niva Wheel";
		selection = "wheel_spare_1";
	};
	
	class Slot_NivaHood {
		name = "NivaHood";
		displayName = "NivaHood";
	};
	
	class Slot_NivaTrunk {
		name = "NivaTrunk";
		displayName = "NivaTrunk";
	};
	
	class Slot_NivaDriverDoors {
		name = "NivaDriverDoors";
		displayName = "NivaDriverDoors";
	};
	
	class Slot_NivaCoDriverDoors {
		name = "NivaCoDriverDoors";
		displayName = "NivaCoDriverDoors";
	};
	
	class Slot_CivSedanWheel_1_1 {
		name = "CivSedanWheel_1_1";
		displayName = "Front Left CivSedan Wheel";
		selection = "wheel_1_1_hide";
	};
	
	class Slot_CivSedanWheel_1_2 {
		name = "CivSedanWheel_1_2";
		displayName = "Front Right CivSedan Wheel";
		selection = "wheel_1_2_hide";
	};
	
	class Slot_CivSedanWheel_2_1 {
		name = "CivSedanWheel_2_1";
		displayName = "Front Left CivSedan Wheel";
		selection = "wheel_2_1_hide";
	};
	
	class Slot_CivSedanWheel_2_2 {
		name = "CivSedanWheel_2_2";
		displayName = "Front Right CivSedan Wheel";
		selection = "wheel_2_2_hide";
	};
	
	class Slot_CivSedanHood {
		name = "CivSedanHood";
		displayName = "CivSedanHood";
	};
	
	class Slot_CivSedanTrunk {
		name = "CivSedanTrunk";
		displayName = "CivSedanTrunk";
	};
	
	class Slot_CivSedanDriverDoors {
		name = "CivSedanDriverDoors";
		displayName = "CivSedanDriverDoors";
	};
	
	class Slot_CivSedanCoDriverDoors {
		name = "CivSedanCoDriverDoors";
		displayName = "CivSedanCoDriverDoors";
	};
	
	class Slot_CivSedanCargo1Doors {
		name = "CivSedanCargo1Doors";
		displayName = "CivSedanCargo1Doors";
	};
	
	class Slot_CivSedanCargo2Doors {
		name = "CivSedanCargo2Doors";
		displayName = "CivSedanCargo2Doors";
	};
	
	class Slot_BusWheel_1_1 {
		name = "BusWheel_1_1";
		displayName = "Front Left Bus Wheel";
		selection = "wheel_1_1_hide";
	};
	
	class Slot_BusWheel_1_2 {
		name = "BusWheel_1_2";
		displayName = "Front Right Bus Wheel";
		selection = "wheel_1_2_hide";
	};
	
	class Slot_BusWheel_2_1 {
		name = "BusWheel_2_1";
		displayName = "Front Left Bus Wheel";
		selection = "wheel_2_1_hide";
	};
	
	class Slot_BusWheel_2_2 {
		name = "BusWheel_2_2";
		displayName = "Front Right Bus Wheel";
		selection = "wheel_2_2_hide";
	};
	
	class Slot_BusHood {
		name = "BusHood";
		displayName = "BusHood";
	};
	
	class Slot_BusLeftDoors_1 {
		name = "BusLeftDoors_1";
		displayName = "BusLeftDoors";
		selection = "BusLeftDoors_1";
	};
	
	class Slot_BusLeftDoors_2 {
		name = "BusLeftDoors_2";
		displayName = "BusLeftDoors";
		selection = "BusLeftDoors_2";
	};
	
	class Slot_BusLeftDoors_3 {
		name = "BusLeftDoors_3";
		displayName = "BusLeftDoors";
		selection = "BusLeftDoors_3";
	};
	
	class Slot_BusRightDoors_1 {
		name = "BusRightDoors_1";
		displayName = "BusRightDoors";
		selection = "BusRightDoors_1";
	};
	
	class Slot_BusRightDoors_2 {
		name = "BusRightDoors_2";
		displayName = "BusRightDoors";
		selection = "BusRightDoors_2";
	};
	
	class Slot_BusRightDoors_3 {
		name = "BusRightDoors_3";
		displayName = "BusRightDoors";
		selection = "BusRightDoors_3";
	};
};

class CfgMods {
	class DayZ {
		dir = "DZ";
		picture = "DZ\ui\data\logos\dayz_ca";
		action = "http://www.dayzgame.com";
		hideName = 1;
		hidePicture = 1;
		name = "DayZ";
		credits = "BIS_fnc_credits_H";
		author = "Bohemia Interactive";
	};
};

class DefaultEventhandlers {
	init = "_scr = _this execVM ""\dz\Data\data\ParticleEffects\SCRIPTS\init.sqf"";";
	fired = "_this call BIS_Effects_EH_Fired;";
	killed = "_this call BIS_Effects_EH_Killed;";
};

class CfgFactionClasses {
	class dz_Civ_US {
		displayName = "Civilian";
		priority = 1;
		side = TCivilian;
	};
	
	class dz_Ind_PC {
		displayName = "Ind PC";
		priority = 2;
		side = TCivilian;
	};
	
	class dz_BLUFOR_USArmy {
		displayName = "BLUFOR USArmy";
		priority = 3;
		side = TCivilian;
	};
	
	class dz_OPFOR_Army {
		displayName = "OPFOR Army";
		priority = 4;
		side = TCivilian;
	};
	
	class dz_OPFOR_Militia {
		displayName = "OPFOR Militia";
		priority = 5;
		side = TCivilian;
	};
	
	class dz_None {
		displayName = "";
		priority = 10001;
		side = -1;
	};
};

class CfgVehicleClasses {
	class People {
		displayName = "People";
	};
	
	class Zombie {
		displayName = "Zombies";
	};
	
	class Vehicles_Car {
		displayName = "Cars";
	};
	
	class Vehicles_Truck {
		displayName = "Trucks";
	};
	
	class Vehicles_Bicycle {
		displayName = "Bicycle";
	};
	
	class Vehicles_Motorbike {
		displayName = "Motorbikes";
	};
	
	class Vehicles_Boat {
		displayName = "Boats";
	};
	
	class Vehicles_Ship {
		displayName = "Ships";
	};
	
	class Vehicles_Helicopter {
		displayName = "Helicopters";
	};
	
	class Vehicles_Plane {
		displayName = "Planes";
	};
	
	class Clothing {
		displayName = "Clothing";
	};
	
	class Backpacks {
		displayName = "Backpacks";
	};
	
	class Ammoboxes {
		displayName = "Ammoboxes";
	};
	
	class Test {
		displayName = "Test";
	};
	
	class Buildings {
		displayName = "Buildings";
	};
	
	class Ruins {
		displayName = "Ruins";
	};
	
	class Fortifications {
		displayName = $STR_DN_OBJECTS_FORTIFICATIONS;
	};
	
	class Furniture {
		displayName = $STR_DN_FURNITURE;
	};
	
	class Military {
		displayName = $STR_DN_MILITARY;
	};
	
	class Misc {
		displayName = $STR_DN_MISC;
	};
	
	class Signs {
		displayName = $STR_DN_SIGNS;
	};
	
	class Targets {
		displayName = $STR_DN_TARGETS;
	};
	
	class Training {
		displayName = $STR_DN_TRAINING;
	};
	
	class Wrecks {
		displayName = $STR_DN_WRECKS;
	};
	
	class Dead_bodies {
		displayName = "Dead bodies";
	};
	
	class Small_items {
		displayName = "Small items";
	};
};

class CfgCoreData {
	textureDefault = "dz\Data\data\default_co.paa";
	textureTrack = "dz\Data\data\texturetrack_ca.paa";
	textureTrackFour = "dz\Data\data\texturetrackfour_ca.paa";
	maskTextureFlare = "dz\Data\data\masktextureflare%02d_co.paa";
	eyeFlare = "dz\Data\data\eyeflare_ca.paa";
	heatHazeNoise = "dz\Data\data\heathaze_ca.paa";
	cloudletBasic = "dz\Data\data\cl_basic.p3d";
	cloudletFire = "dz\Data\data\cl_fire.p3d";
	cloudletFireD = "dz\Data\data\cl_fireD.p3d";
	cloudletFireNew = "dz\Data\data\Fire_4x4.p3d";
	cloudletWater = "dz\Data\data\cl_water.p3d";
	paperCarModel = "dz\Data\data\papauto.p3d";
	collisionShape = "dz\Data\data\colision.p3d";
	sphereModel = "dz\Data\data\koule.p3d";
	rectangleModel = "dz\Data\data\rect.p3d";
	craterShell = "dz\Data\data\krater.p3d";
	craterBullet = "dz\Data\data\krater_po_kulce.p3d";
	sphereLight = "dz\Data\data\kouleSvetlo.p3d";
	cloudletMissile = "dz\Data\data\missileSmoke.p3d";
	horizontObject = "dz\Data\data\horizont.p3d";
	skysphere = "dz\Data\data\obloha.p3d";
	halflight = "dz\Data\data\halfLight.p3d";
	footStepL = "dz\Data\data\stopa_L.p3d";
	footStepR = "dz\Data\data\stopa_P.p3d";
	slopBlood = "dz\Data\data\krvava_skvrna.p3d";
	textureBlack = "dz\Data\data\black_co.paa";
	textureLine = "dz\Data\data\tracer_co.paa";
	textureLine3D = "dz\Data\data\textureline3d_ca.paa";
	cobraLight = "dz\Data\data\cobraSvetlo.p3d";
	gunLightModel = "dz\Data\data\gunLight.p3d";
	marker = "dz\Data\data\obrysove svetlo.p3d";
	rayModel = "dz\Data\data\laserBeam.p3d";
};

class CfgCloudletShapes {
	cloudletBlood = "\dz\Data\data\cl_water.p3d";
	cloudletClouds = "\dz\Data\data\cl_basic.p3d";
	cloudletDust = "\dz\Data\data\cl_basic.p3d";
	cloudletExplosion = "\dz\Data\data\cl_basic.p3d";
	cloudletFire = "\dz\Data\data\cl_fireD.p3d";
	cloudletMissile = "\dz\Data\data\cl_basic.p3d";
	cloudletSmoke = "\dz\Data\data\cl_basic.p3d";
	cloudletUniversal = "\dz\Data\data\ParticleEffects\Universal\Universal.p3d";
	cloudletWater = "\dz\Data\data\cl_water.p3d";
	cloudletUniversal_02 = "\dz\data\data\ParticleEffects\Universal\Universal_02";
};

class CfgOpticsEffect {
	class TankGunnerOptics1 {
		type = "ColorCorrections";
		priority = 1550;
		params[] = {1, 1, 0, 0, 0, 0, 0, 1, 1.0, 0.2, 0.6, 0.199, 0.587, 0.114, 0};
	};
	
	class TankGunnerOptics2 {
		type = "ColorCorrections";
		priority = 1550;
		params[] = {1, 1, 0, 0, 0, 0, 0, 1, 1.0, 0.2, 0.8, 0.199, 0.25, 0.114, 0};
	};
	
	class TankCommanderOptics1 {
		type = "FilmGrain";
		priority = 2050;
		params[] = {0.05, 1, 1, 0.35, 1, 0};
	};
	
	class OpticsInverted {
		type = "colorInversion";
		priority = 2550;
		params[] = {1, 1, 1};
	};
	
	class BWTV {
		type = "ColorCorrections";
		priority = 1550;
		params[] = {1, 2, -0.03, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.199, 0.587, 0.114, 0.0};
	};
	
	class WeaponsOptics {
		type = "dynamicblur";
		priority = 450;
		params[] = {0.05};
	};
	
	class OpticsBlur1 {
		type = "dynamicblur";
		priority = 450;
		params[] = {0.0025};
	};
	
	class OpticsBlur2 {
		type = "dynamicblur";
		priority = 450;
		params[] = {0.005};
	};
	
	class OpticsBlur3 {
		type = "dynamicblur";
		priority = 450;
		params[] = {0.01};
	};
	
	class OpticsCHAbera1 {
		type = "chromaberration";
		priority = 250;
		params[] = {0.004, 0.004, 1};
	};
	
	class OpticsCHAbera2 {
		type = "chromaberration";
		priority = 250;
		params[] = {0.006, 0.006, 1};
	};
	
	class OpticsCHAbera3 {
		type = "chromaberration";
		priority = 250;
		params[] = {0.008, 0.008, 1};
	};
};

class CfgNoMipmapTextures {
	NoMipmapTextures = "\dz\data\data\NoMipmapTextures.p3d";
};

class PreloadTextures {
	class CfgCloudletShapes {
		cloudletSmoke = "@*";
		cloudletWater = "@*";
		cloudletFire = "@*";
		cloudletUniversal = "@*";
	};
	
	class CfgNoMipmapTextures {
		NoMipmapTextures = "@*";
	};
};

class AirplaneHUD {
	class Pos10Vector;	// External class reference
	
	class bones {
		class AGLMove1;	// External class reference
		class AGLMove2;	// External class reference
		class ASLMove1;	// External class reference
		class ASLMove2;	// External class reference
		class VertSpeed;	// External class reference
		class SpdMove2;	// External class reference
		class ILS;	// External class reference
		class WeaponAim;	// External class reference
		class Target;	// External class reference
		class TargetDistanceMissile;	// External class reference
		class TargetDistanceMGun;	// External class reference
		class Level0;	// External class reference
		class LevelP5;	// External class reference
		class LevelM5;	// External class reference
		class LevelP10;	// External class reference
		class LevelM10;	// External class reference
		class LevelP15;	// External class reference
		class LevelM15;	// External class reference
		class Velocity;	// External class reference
		class PlaneW;	// External class reference
	};
	
	class Draw {
		class Altitude;	// External class reference
		
		class DimmedBase {
			class AltitudeBase;	// External class reference
		};
		class Speed;	// External class reference
		class SpeedNumber;	// External class reference
		
		class PlaneW {
			class LineHL;	// External class reference
			class Velocity;	// External class reference
		};
		
		class MGun {
			class Circle;	// External class reference
		};
		
		class Missile {
			class Circle;	// External class reference
			class Target;	// External class reference
		};
		
		class Horizont {
			class Dimmed {
				class Level0;	// External class reference
			};
			class LevelP5;	// External class reference
			class LevelM5;	// External class reference
			class LevelP10;	// External class reference
			class LevelM10;	// External class reference
			class LevelP15;	// External class reference
			class LevelM15;	// External class reference
		};
		
		class ILS {
			class Glideslope {
				class ILS;	// External class reference
			};
			class AOABracket;	// External class reference
		};
	};
};

class DefaultAction {
	displayNameDefault = "";
	displayName = "";
	priority = 0;
	position = "action";
	radius = 2;
	onlyForPlayer = 0;
	showInHands = 1;
	condition = "true";
	statement = "";
	interactionWeight = 0;
};

class ActionOnTarget : DefaultAction {
	priority = 50;
	condition = "ProfileStart 'sqf_userActions_ActionOnTarget_condition'; 	_con = ((playerTarget owner _person) isKindOf 'SurvivorBase') and 	(_person getVariable ['isUsingSomething',0] == 0) 	and !(itemParent this isKindOf 'FireplaceBase') 	and (this == (itemInHands _person)); 	ProfileStop 'sqf_userActions_ActionOnTarget_condition'; _con;";
	statement = "_person setVariable ['isUsingSomething',1]; [0,this,_person,_name] call player_actionOnTarget;";
	sound = "";
	messages[] = {"I cannot do this as the target is dead", "colorStatusChannel", "%1 starts to perform an action on you", "colorFriendly", "I start to perform an action on %1", "colorAction", "%1 moved and the action failed", "colorImportant", "%1 has successfully performed an action on you", "colorFriendly", "I successfully performed an action on %1", "colorAction"};
	action = "PlayerCraft";
	onStart = "";
	onComplete = "";
	allowDead = 0;
	useQuantity = 1;
	unlimited = 0;
};

class ActionOnSelf : DefaultAction {
	condition = "ProfileStart 'sqf_userActions_ActionOnSelf_condition'; _con = (_person getVariable ['isUsingSomething',0] == 0) and !(itemParent this isKindOf 'FireplaceBase');ProfileStop 'sqf_userActions_ActionOnSelf_condition'; _con;";
	statement = "_person setVariable ['isUsingSomething',1]; this setVariable ['inusage',1]; [0,this,_name,_person] spawn player_actionOnSelf;";
	soundEffects[] = {};
	action = "PlayerCraft";
	messages[] = {"The %1 is empty", "colorStatusChannel", "I have used a %1", "colorAction"};
	keepEmpty = 0;
	trashItem = "";
	useQuantity = 1;
	unlimited = 0;
};

class RecipeToolOnTool {
	name = "Use Tool on Tool";
	tools[] = {};
	material[] = {};
	results[] = {};
	action = "_owner setVariable ['isUsingSomething',1]; [0,[_tool1,_tool2],_name,_owner] spawn player_actionOnItem;";
	condition = "ProfileStart 'sqf_userActions_RecipeToolOnTool_condition'; _con = (_owner getVariable ['isUsingSomething',0] == 0); ProfileStop 'sqf_userActions_RecipeToolOnTool_condition'; _con;";
	onComplete = "";
	sound = "";
	playerAction = "PlayerCraft";
	messages[] = {"The %1 is empty", "colorStatusChannel", "The %1 is broken", "colorImportant", "The %1 is broken", "colorImportant", "I have used a %1 on a %2", "colorAction"};
	allowDead = 0;
	keepEmpty = 0;
	trashItem = "";
	interactionWeight = 0;
	useQuantity = 0.25;
};

class CfgDamageAround {
	class DamageAroundPole {
		radiusRatio = "10";
		indirectHit = 900;
	};
};

class CfgDestructPos {
	class DelayedDestruction {
		timeBeforeHiding = 0.2;
		hideDuration = "0.65+lifeTime*0.05";
	};
};

class CfgVehicles {
	class All {
		author = "dayz";
		
		class DestructionEffects {
			class Light1 {
				simulation = "light";
				type = "ObjectDestructionLight";
				position = "destructionEffect1";
				intensity = 0.001;
				interval = 1;
				lifeTime = 3;
			};
			
			class Sound {
				type = "Fire";
			};
			
			class Fire1 {
				simulation = "particles";
				type = "ObjectDestructionFire1";
				position = "destructionEffect1";
				intensity = 0.15;
				interval = 1;
				lifeTime = 3;
			};
			
			class Smoke1 {
				simulation = "particles";
				type = "ObjectDestructionSmoke";
				position = "destructionEffect1";
				intensity = 0.15;
				interval = 1;
				lifeTime = 3.5;
			};
			
			class Sparks1 {
				simulation = "particles";
				type = "ObjectDestructionSparks";
				position = "destructionEffect1";
				intensity = 0;
				interval = 1;
				lifeTime = 0;
			};
			
			class Light2 {
				simulation = "light";
				type = "ObjectDestructionLight";
				position = "destructionEffect2";
				intensity = 0.001;
				interval = 1;
				lifeTime = 3;
			};
			
			class Fire2 {
				simulation = "particles";
				type = "ObjectDestructionFire2";
				position = "destructionEffect2";
				intensity = 0.15;
				interval = 1;
				lifeTime = 3;
			};
			
			class Smoke1_2 {
				simulation = "particles";
				type = "ObjectDestructionSmoke1_2";
				position = "destructionEffect2";
				intensity = 0.15;
				interval = 1;
				lifeTime = 3.5;
			};
		};
	};
	
	class AllVehicles : All {
		side = TCivilian;
		htMin = 60;
		htMax = 1800;
		afMax = 200;
		mfMax = 100;
		mFact = 0;
		tBody = 0;
		class ViewPilot;	// External class reference
		driverFreelook = 1;
		
		class NewTurret {
			gunnerInAction = "ManActTestDriver";
			gunnerAction = "ManActTestDriver";
			gunBeg = "usti hlavne";	// endpoint of the gun
			gunEnd = "konec hlavne";	// chamber of the gun
			memoryPointGunnerOptics = "gunnerview";
			memoryPointsGetInGunner = "pos gunner";
			memoryPointsGetInGunnerDir = "pos gunner dir";
			memoryPointGun = "kulas";
			selectionFireAnim = "zasleh";
			class ViewOptics;	// External class reference
			class ViewGunner;	// External class reference
		};
	};
	
	class Land : AllVehicles {};
	
	class LandVehicle : Land {
		class ViewOptics;	// External class reference
	};
	
	class Motorcycle : LandVehicle {
		vehicleClass = "Vehicles_Motorbike";
		itemsCargoSize[] = {2, 5};
	};
	
	class Bicycle : Motorcycle {
		vehicleClass = "Vehicles_Bicycle";
		itemsCargoSize[] = {2, 2};
	};
	
	class Ship : AllVehicles {
		unitInfoType = "UnitInfoCar";
		
		class HitPoints {
			class HitEngine {
				armor = 1.2;
				material = 60;
				name = "motor";
				visual = "motor";
				passThrough = true;
			};
		};
		getInAction = "GetInLow";
		getOutAction = "GetOutLow";
		cargoGetInAction[] = {"GetInLow"};
		cargoGetOutAction[] = {"GetOutLow"};
		
		class MarkerLights {
			class RedStill {
				name = "cerveny pozicni";
				color[] = {1.0, 0.1, 0.1, 1};
				ambient[] = {0.1, 0.01, 0.01, 1};
				radius = 0.01;
				blinking = false;
			};
			
			class GreenStill {
				name = "zeleny pozicni";
				color[] = {0.1, 1.0, 0.1, 1};
				ambient[] = {0.01, 0.1, 0.01, 1};
				radius = 0.01;
				blinking = false;
			};
			
			class WhiteStill {
				name = "bily pozicni";
				color[] = {1.0, 1.0, 1.0, 1};
				ambient[] = {0.1, 0.1, 0.1, 1};
				radius = 0.01;
				blinking = false;
			};
		};
		
		// internal camera viewing limitations
		class ViewPilot : ViewPilot {
			initFov = 0.7;
			minFov = 0.25;
			maxFov = 1.4;
		};
		precision = 10;
		
		class Eventhandlers : DefaultEventhandlers {};
		
		class DestructionEffects {};
	};
	
	class SmallShip : Ship {
		vehicleClass = "Vehicles_Boat";
		itemsCargoSize[] = {24, 4};
	};
	
	class BigShip : Ship {
		vehicleClass = "Vehicles_Ship";
		itemsCargoSize[] = {48, 4};
	};
	
	class Man : Land {
		camouflage = 2;	// how dificult to spot - bigger - better spotable
		sensitivityEar = 0.5;
		minFireTime = 5;	// minimal time spent firing on single target
		extCameraPosition[] = {0.15, 0, -2.0};
		commanderCanSee = 31;
	};
	
	class EN5C_Man_Base : Man {};
	
	class DZ_LightAI : Man {
		weaponSlots = 0;
		
		class Wounds {
			tex[] = {};
			mat[] = {};
		};
		class ViewPilot;	// External class reference
	};
	
	class EN5C_DZ_LightAI : EN5C_Man_Base {
		weaponSlots = 0;
		
		class Wounds {
			tex[] = {};
			mat[] = {};
		};
		class ViewPilot;	// External class reference
	};
	
	class Air : AllVehicles {
		class AnimationSources;	// External class reference
		class NewTurret;	// External class reference
		accuracy = 0;	// accuracy needed to recognize type of this target
		irScanRangeMin = 500;
		
		class MarkerLights {
			class WhiteStill {
				name = "bily pozicni";
				color[] = {0.0388, 0.0388, 0.0388, 1.0};
				ambient[] = {0.03, 0.023, 0.0056, 1.0};
				radius = 0.001;
				blinking = false;
			};
			
			class RedStill {
				name = "cerveny pozicni";
				color[] = {0.12, 0.006, 0.006, 1.0};
				ambient[] = {0.1, 0.01, 0.01, 1.0};
				radius = 0.001;
				blinking = false;
			};
			
			class GreenStill {
				name = "zeleny pozicni";
				color[] = {0.006, 0.12, 0.006, 1.0};
				ambient[] = {0.01, 0.1, 0.01, 1.0};
				radius = 0.001;
				blinking = false;
			};
			
			class WhiteBlinking {
				name = "bily pozicni blik";
				color[] = {0.0388, 0.0388, 0.0388, 1.0};
				ambient[] = {0.03, 0.023, 0.0056, 1.0};
				radius = 0.001;
				blinking = true;
			};
			
			class RedBlinking {
				name = "cerveny pozicni blik";
				color[] = {0.12, 0.006, 0.006, 1.0};
				ambient[] = {0.1, 0.01, 0.01, 1.0};
				radius = 0.001;
				blinking = true;
			};
		};
	};
	
	class Helicopter : Air {
		vehicleClass = "Vehicles_Helicopter";
		itemsCargoSize[] = {48, 4};
		weapons[] = {};
		magazines[] = {};
		dammageHalf[] = {};
		dammageFull[] = {};
		type = VAir;
		getInAction = "GetInLow";
		getOutAction = "GetOutLow";
		cargoGetInAction[] = {"GetInLow"};
		cargoGetOutAction[] = {"GetOutLow"};
		armorStructural = 4;
		secondaryExplosion = -0.1;
		supplyRadius = 1.2;
		accuracy = 0.02;	// accuracy needed to recognize type of this target
		camouflage = 100;	// how dificult to spot - bigger - better spotable
		audible = 30;	// audible - bigger - better heard
		
		// internal camera viewing limitations
		class ViewPilot : ViewPilot {
			initFov = 1;
			minFov = 0.3;
			maxFov = 1.2;
			initAngleX = 0;
			minAngleX = -65;
			maxAngleX = 85;
			initAngleY = 0;
			minAngleY = -150;
			maxAngleY = 150;
		};
		
		class HitPoints {
			class HitHull {
				armor = 1;
				material = 51;
				name = "NEtrup";
				passThrough = true;
				visual = "trup";
			};
			
			class HitEngine {
				armor = 0.25;
				material = 51;
				name = "motor";
				passThrough = true;
				visual = "motor";
			};
			
			class HitAvionics {
				armor = 0.15;
				material = 51;
				name = "elektronika";
				passThrough = true;
				visual = "elektronika";
			};
			
			class HitVRotor {
				armor = 0.3;
				material = 51;
				name = "mala vrtule";
				passThrough = 0.3;
				visual = "mala vrtule staticka";
			};
			
			class HitHRotor {
				armor = 0.2;
				material = 51;
				name = "velka vrtule";
				passThrough = 0.1;
				visual = "velka vrtule staticka";
			};
			
			class HitMissiles {
				armor = 0.1;
				material = 51;
				name = "munice";
				passThrough = 0.5;
				visual = "munice";
			};
			
			class HitRGlass {
				armor = 0.1;
				material = 51;
				name = "sklo predni P";
				passThrough = false;
				visual = "sklo predni P";
			};
			
			class HitLGlass {
				armor = 0.1;
				material = 51;
				name = "sklo predni L";
				passThrough = false;
				visual = "sklo predni L";
			};
			
			class HitGlass1 {
				armor = 2;
				material = -1;
				name = "glass1";
				passThrough = false;
				visual = "glass1";
			};
			
			class HitGlass2 {
				armor = 2;
				material = -1;
				name = "glass2";
				passThrough = false;
				visual = "glass2";
			};
			
			class HitGlass3 {
				armor = 2;
				material = -1;
				name = "glass3";
				passThrough = false;
				visual = "glass3";
			};
			
			class HitGlass4 {
				armor = 2;
				material = -1;
				name = "glass4";
				passThrough = false;
				visual = "glass4";
			};
			
			class HitGlass5 {
				armor = 2;
				material = -1;
				name = "glass5";
				passThrough = false;
				visual = "glass5";
			};
			
			class HitGlass6 {
				armor = 2;
				material = -1;
				name = "glass6";
				passThrough = false;
				visual = "glass6";
			};
			
			class HitEngine2 {
				armor = 1;
				material = -1;
				name = "engine2";
				passThrough = false;
			};
			
			class HitEngine3 {
				armor = 1;
				material = -1;
				name = "engine3";
				passThrough = false;
			};
			
			class HitBatteries {
				armor = 1;
				material = -1;
				name = "batteries";
				passThrough = false;
			};
			
			class HitLight {
				armor = 1;
				material = -1;
				name = "light";
				passThrough = false;
			};
			
			class HitHydraulics {
				armor = 1;
				material = -1;
				name = "hydraulics";
				passThrough = false;
			};
			
			class HitTransmission {
				armor = 1;
				material = -1;
				name = "transmission";
				passThrough = false;
			};
			
			class HitGear {
				armor = 1;
				material = -1;
				name = "gear";
				passThrough = false;
			};
			
			class HitFuel {
				armor = 1;
				material = -1;
				name = "fuel tanks";
				passThrough = false;
			};
			
			class HitHStabilizerL1 {
				armor = 1;
				material = -1;
				name = "HStabilizerL1";
				passThrough = false;
			};
			
			class HitHStabilizerR1 {
				armor = 1;
				material = -1;
				name = "HStabilizerR1";
				passThrough = false;
			};
			
			class HitVStabilizer1 {
				armor = 1;
				material = -1;
				name = "VStabilizer1";
				passThrough = false;
			};
			
			class HitTail {
				armor = 1;
				material = -1;
				name = "tail boom";
				passThrough = false;
			};
			
			class HitPitotTube {
				armor = 1;
				material = -1;
				name = "pitot tube";
				passThrough = false;
			};
			
			class HitStaticPort {
				armor = 1;
				material = -1;
				name = "static port";
				passThrough = false;
			};
			
			class HitStarter1 {
				armor = 1;
				material = -1;
				name = "starter1";
				passThrough = false;
			};
			
			class HitStarter2 {
				armor = 1;
				material = -1;
				name = "starter2";
				passThrough = false;
			};
			
			class HitStarter3 {
				armor = 1;
				material = -1;
				name = "starter3";
				passThrough = false;
			};
		};
		
		class Turrets {
			class MainTurret : NewTurret {
				memoryPointsGetInGunner = "pos gunner";
				memoryPointsGetInGunnerDir = "pos gunner dir";
				gunnerGetInAction = "GetInLow";
				gunnerGetOutAction = "GetOutLow";
				memoryPointGun = "machinegun";
				memoryPointGunnerOptics = "gunnerview";
				selectionFireAnim = "zasleh";
				castGunnerShadow = true;
				gunnerAction = "AH1Z_Gunner";
				gunnerInAction = "AH1Z_Gunner";
				gunnerOpticsModel = "";
				gunnerForceOptics = false;
				enableManualFire = 0;
				
				class HitPoints {
					class HitTurret {
						armor = 0.2;
						material = 51;
						name = "vez";
						visual = "vez";
						passThrough = 0.3;
					};
					
					class HitGun {
						armor = 0.2;
						material = 51;
						name = "zbran";
						visual = "zbran";
						passThrough = 0.1;
					};
				};
			};
		};
		
		class AnimationSources : AnimationSources {
			class HitGlass1 {
				source = "Hit";
				hitpoint = "HitGlass1";
				raw = 1;
			};
			
			class HitGlass2 : HitGlass1 {
				hitpoint = "HitGlass2";
			};
			
			class HitGlass3 : HitGlass1 {
				hitpoint = "HitGlass3";
			};
			
			class HitGlass4 : HitGlass1 {
				hitpoint = "HitGlass4";
			};
			
			class HitGlass5 : HitGlass1 {
				hitpoint = "HitGlass5";
			};
			
			class HitGlass6 : HitGlass1 {
				hitpoint = "HitGlass6";
			};
		};
		
		class Eventhandlers : DefaultEventhandlers {};
		
		class DestructionEffects {};
	};
	
	class Plane : Air {
		vehicleClass = "Vehicles_Plane";
		itemsCargoSize[] = {24, 4};
		type = VAir;
		memoryPointGun = "kulomet";
		soundDammage[] = {"", 0, 1};
		getInAction = "GetInHigh";
		getOutAction = "GetOutHigh";
		cargoGetInAction[] = {"GetInHigh"};
		cargoGetOutAction[] = {"GetOutHigh"};
		gunnerGetInAction = "GetInHigh";
		gunnerGetOutAction = "GetOutHigh";
		
		// internal camera viewing limitations
		class ViewPilot : ViewPilot {
			initFov = 1;
			minFov = 0.3;
			maxFov = 1.2;
			initAngleX = 0;
			minAngleX = -65;
			maxAngleX = 85;
			initAngleY = 0;
			minAngleY = -150;
			maxAngleY = 150;
		};
		supplyRadius = 1.2;
		accuracy = 0.02;	// accuracy needed to recognize type of this target
		camouflage = 100;	// how dificult to spot - bigger - better spotable
		audible = 20;	// audible - bigger - better heard
		
		class HitPoints {
			class HitHull {
				armor = 1;
				material = 50;
				name = "telo";
				visual = "trup";
				passThrough = true;
			};
		};
		
		class Eventhandlers : DefaultEventhandlers {};
		
		class DestructionEffects {};
	};
	
	class ParachuteBase : Helicopter {};
	
	class Static : All {};
	
	class Building : Static {};
	
	class Strategic : Building {};
	
	class FlagCarrierCore : Strategic {};
	
	class NonStrategic : Building {};
	
	class NonStrategic_Base : NonStrategic {
		animated = false;
	};
	
	class House : Static {
		scope = protected;
		armor = 150;
		side = TCivilian;
		ladders[] = {};
		simulation = "house";
		nameSound = "obj_building";
		displayName = "House";
		irTarget = false;
		accuracy = 0.1;	// accuracy needed to recognize type of this target
		destrType = "DestructBuilding";
		
		class DestructionEffects {
			class Sound {
				simulation = "sound";
				type = "DestrHouse";
				position = "destructionEffect1";
				intensity = 1;
				interval = 1;
				lifeTime = 0.05;
			};
			
			class DestroyPhase1 {
				simulation = "destroy";
				type = "DelayedDestruction";
				lifeTime = 2.5;
				position = "";
				intensity = 1;
				interval = 1;
			};
			
			class DamageAround1 {
				simulation = "damageAround";
				type = "DamageAroundHouse";
				position = "";
				intensity = 1;
				interval = 1;
				lifeTime = 1;
			};
		};
	};
	
	class HouseNoDestruct : House {
		displayName = "HOUSE NO DESTRUCT";
		animated = false;
		destrType = "DestructNo";
		storageCategory = 10;
	};
	
	class HouseHighCost : House {
		displayName = "STRUCTUR HIGH COST";
		armor = 350;
		cost = 1000000;
	};
	
	class Ruins : House {
		vehicleClass = "Ruins";
		destrType = "DestructNo";
	};
	
	class InventoryBase : Static {
		scope = private;
		displayName = "";
		model = "";
		storageCategory = 1;
		physLayer = "item_small";
		animated = false;
		side = TCivilian;
		mapSize = 1;
		reversed = true;
		supplyRadius = 1.4;
		simulation = "inventoryItem";
		inventorySlot = "";
		attachments[] = {};
		handheld = "false";
		rotateDropped = 0;
		rotateY = 0;
		rotateZ = 0;
		autoQuickbar = 0;
		cargoClass = "";
		itemSize[] = {1, 1};
		targetCategory = "";
		quantityBar = 0;
		stackedMax = 0;
		canSplit = 0;
		stackedUnit = "pc.";
		spawnDamageMax = 0.6;
		armAction = "Rifle";
		vehicleClass = "Inventory";
		tooltip = "_text = _this call fnc_generateTooltip;_text";
		quantity = "";
		storeVariables[] = {"note", "modifiers"};
		synchronizedVariables[] = {};
		recoilModifier = "";
		varQuantityInit = 0;
		varQuantityMin = 0;
		varQuantityMax = 1000;
		
		class Melee {
			range = 1.0;
			swingTime = 0.5;
			action = "MeleeAttack2";
			ammo = "MeleeFist";
			useCursor = 1;
			actionSounds = "action_punch";
		};
	};
	
	class ContainerBase : InventoryBase {
		handheld = "true";
		rotateDropped = 1;
		rotateAlways = 1;
		inventoryCondition = "!((typeOf _parent) == (typeOf _this))";
		openable = 0;
		armAction = "Disarm";
		lootCategory = "Containers";
		storageCategory = 7;
		storeVariables[] = {"note", "modifiers"};
	};
	
	class FixedContainer : InventoryBase {
		handheld = "false";
		rotateDropped = 0;
		rotateAlways = 0;
		inventoryCondition = "false";
		openable = 0;
		itemsCargoSize[] = {5, 8};
		itemsCargo[] = {};
		storageCategory = 7;
		storeVariables[] = {"note", "modifiers"};
	};
	
	class AttachmentBase : InventoryBase {
		itemSize[] = {2, 1};
		tooltip = "_text = _this call fnc_generateTooltip;_text";
		reversed = false;
		handheld = "true";
		armAction = "Disarm";
		lootCategory = "Attachments";
	};
	
	class InventoryItemBase : InventoryBase {};
	
	class BottleBase : InventoryBase {
		handheld = "true";
		autoQuickbar = 1;
		rotateDropped = 1;
		rotateAlways = 0;
		canSplit = 0;
		armAction = "Disarm";
		stackedRandom = 1;
		stackedMax = 1000;
		stackedUnit = "ml";
		itemSize[] = {1, 2};
		handAnim[] = {"OFP2_ManSkeleton", "\DZ\anims\data\anim\sdr\ik\drinks\water_bottle.rtm"};
		quantity = "format ['%1%%', round((quantity _this / maxQuantity _this) * 100)]";
		tooltip = "_text = _this call fnc_generateTooltip;_text";
		lootCategory = "Food";
		storageCategory = 7;
		storeVariables[] = {"liquidType", "quantity", "modifiers"};
		synchronizedVariables[] = {"quantity", 1, "liquidType", 1};
		
		class Nutrition {
			totalVolume = 500;
			energy = 0;
			water = 1000;
			nutritionalIndex = 75;
		};
		
		class UserActions {
			class Drink : ActionOnSelf {
				displayNameDefault = "Drink";
				displayName = $STR_USERACTIONS_DRINK;
				condition = "ProfileStart 'sqf_userActions_BottleBase_Drink_condition'; _con = [this, _person] call player_canUseDrinkAction; ProfileStop 'sqf_userActions_BottleBase_Drink_condition'; _con;";
				keepEmpty = 1;
				sound = "drink_bottle";
				action = "playerDrink";
				trashItem = "";
				interactionWeight = 1;
				useQuantity = 100;
				messages[] = {"The %1 is empty", "colorStatusChannel", "I took a swig from the %1", "colorAction"};
				onComplete = "[_person,_use] call player_liquidConsumed;";
			};
			
			class DrinkAll : Drink {
				displayNameDefault = "Drink All";
				displayName = "Drink All";
				onStart = "if (_quantity <= 0.25) then {_action = 'PlayerDrink';};";
				action = "PlayerDrinkAll";
				condition = "ProfileStart 'sqf_userActions_BottleBase_DrinkAll_condition'; _con = [this, _person] call player_canUseDrinkAction; ProfileStop 'sqf_userActions_BottleBase_DrinkAll_condition'; _con;";
				useQuantity = 3000;
				messages[] = {"The %1 is empty", "colorStatusChannel", "I have drank the whole %1", "colorAction"};
			};
			
			class ForceDrink : ActionOnTarget {
				displayNameDefault = $STR_USERACTIONS_FORCEDRINK;
				displayName = $STR_USERACTIONS_FORCEDRINK;
				sound = "";
				action = "ItemUseLong";
				condition = "ProfileStart 'sqf_userActions_ActionOnTarget_condition'; 				_con = ((playerTarget owner _person) isKindOf 'SurvivorBase') and 				(_person getVariable ['isUsingSomething',0] == 0) 				and !(itemParent this isKindOf 'FireplaceBase') 				and (this == (itemInHands _person)) 				and (quantity this > 0 ); 				ProfileStop 'sqf_userActions_ActionOnTarget_condition'; _con;";
				onStart = "";
				onComplete = "";
				useQuantity = 100;
				trashItem = "";
				interactionWeight = 0.25;
				keepEmpty = 1;
				messages[] = {"One cannot force a dead person to drink", "colorStatusChannel", "%1 starts forcing you to drink", "colorFriendly", "I started forcing %1 to drink", "colorAction", "%1 moved and force drinking failed", "colorImportant", "%1 has successfully forced you to drink", "colorFriendly", "I successfully forced %1 to drink", "colorAction"};
			};
			
			class Catchwater : ActionOnSelf {
				displayNameDefault = "Catch some rain";
				displayName = "Catch some rain";
				sound = "";
				messages[] = {"", "colorStatusChannel", "I have caught some rain.1", "colorAction"};
				trashItem = "";
				interactionWeight = 1;
				unlimited = 1;
				keepEmpty = 1;
				useQuantity = -1;
				condition = "ProfileStart 'sqf_userActions_BottleBase_Catchwater_condition'; _con = (_person getVariable ['isUsingSomething',0] == 0 && _canUseActions ) && itemInHands _person == this && (quantity this < maxQuantity this) && (_person getVariable ['gettingWet',false]) && !(itemParent this isKindOf 'FireplaceBase'); ProfileStop 'sqf_userActions_BottleBase_Catchwater_condition'; _con;";
				statement = "[1, _person, this] call player_catchRain;";
			};
			
			class Empty : DefaultAction {
				displayNameDefault = "Empty Vessel";
				displayName = "Empty Vessel";
				position = "";
				radius = 2;
				onlyForPlayer = 1;
				showInHands = 1;
				keepEmpty = 1;
				condition = "ProfileStart 'sqf_userActions_BottleBase_Empty_condition'; 					_con = (_person getVariable ['isUsingSomething',0] == 0 && 					_canUseActions && 					itemInHands _person == this && 					damage this < 1 && 					quantity this > 0 ); 					ProfileStop 'sqf_userActions_BottleBase_Empty_condition'; 					_con 				";
				statement = "_person setVariable ['inHandsPlayer', itemInHands _person]; 					(_person setVariable ['isUsingSomething',1]); 					_person unlockItemFromHands (itemInHands _person); 					_person setSlotLock ['Hands', true]; 					diag_log format ['EmptyVessel:::Lock::: %1', _person getSlotLock 'Hands']; 					_person playAction ['PlayerEmptyJerryCan', 					{ 						(_this getVariable ['inHandsPlayer',0]) setQuantity 0; 						(_this setVariable ['isUsingSomething',0]); 						_this unlockItemFromHands (itemInHands _person); 						_this setSlotLock ['Hands', false]; 						diag_log format ['EmptyVessel:::Lock::: %1', _this getSlotLock 'Hands']; 					}]; 				";
			};
			
			class CleanWounds : ActionOnSelf {
				displayNameDefault = $STR_USERACTIONS_USETINCTURE;
				displayName = "Clean Wounds";
				condition = "(_person getVariable ['isUsingSomething',0] == 0) && quantity (itemInHands _person) > 0 && (itemInHands _person) getVariable ['liquidType',''] == 'disinfectant' && !(itemParent this isKindOf 'FireplaceBase');";
				messages[] = {"The %1 is empty", "colorStatusChannel", "I have used some %1", "colorAction"};
				useQuantity = 50;
				onComplete = "[1,_person,'WoundInfection'] call event_modifier;";
			};
		};
	};
	
	class ClothingBase : InventoryBase {
		vehicleClass = "Clothing";
		simulation = "clothing";
		rotateDropped = 0;
		reversed = true;
		handheld = "true";
		armAction = "TwoHanded";
		
		class ClothingTypes {};
		
		class DamageArmor {
			ballistic = 0;
			biological = 0;
			brute = 0;
			shock = 0;
		};
		storeVariables[] = {"note", "modifiers", "wet"};
		synchronizedVariables[] = {"wet", 0.2};
		absorbency = 0.9;
		heatIsolation = 3;
		heatReduction = 0;
		coldReduction = 0;
		ragQuantity = 0;
	};
	
	class BagBase : ClothingBase {
		vehicleClass = "Backpacks";
		inventorySlot = "Back";
		repairableWith = 3;
		itemSize[] = {5, 5};
		inventoryCondition = "(count (itemsInCargo _this) == 0) or (isNull _parent) or isPlayer _parent";
		lootCategory = "Bags";
		storageCategory = 7;
		rotateDropped = 1;
		rotateAlways = 1;
		itemsCargoSize[] = {5, 4};
		storeVariables[] = {"note", "modifiers", "wet"};
	};
	
	class EyeWearBase : ClothingBase {
		rotateDropped = 1;
		rotateAlways = 1;
		inventorySlot = "Eyewear";
		itemSize[] = {1, 1};
		lootCategory = "Eyewear";
	};
	
	class HeadgearBase : ClothingBase {
		inventorySlot = "Headgear";
		itemSize[] = {1, 1};
		lootCategory = "Headgear";
	};
	
	class MaskBase : ClothingBase {
		inventorySlot = "Mask";
		absorbency = 0;
		itemSize[] = {1, 1};
		lootCategory = "Masks";
	};
	
	class TopWearBase : ClothingBase {
		inventorySlot = "Body";
		itemSize[] = {3, 3};
		lootCategory = "Tops";
		inventoryCondition = "(count (itemsInCargo _this) == 0) or (isNull _parent) or isPlayer _parent";
		itemsCargoSize[] = {3, 2};
	};
	
	class BottomWearBase : ClothingBase {
		inventorySlot = "Legs";
		inventoryCondition = "(count (itemsInCargo _this) == 0) or (isNull _parent) or isPlayer _parent";
		itemSize[] = {3, 3};
		lootCategory = "Pants";
		itemsCargoSize[] = {3, 2};
	};
	
	class FootwearBase : ClothingBase {
		inventorySlot = "Feet";
		itemSize[] = {1, 1};
		lootCategory = "Feet";
	};
	
	class VestBase : ClothingBase {
		inventorySlot = "Vest";
		absorbency = 0.3;
		heatIsolation = 2;
		itemSize[] = {2, 2};
		lootCategory = "Vests";
		repairableWith = 3;
		inventoryCondition = "(count (itemsInCargo _this) == 0) or (isNull _parent) or isPlayer _parent";
	};
	
	class GlovesBase : ClothingBase {
		inventorySlot = "Gloves";
		itemSize[] = {1, 1};
		lootCategory = "Gloves";
	};
	
	class EN5C_Inventory_Base : Static {
		simulation = "inventoryItem";
		tooltip = "_text = _this call fnc_generateTooltip;_text";
		scope = private;
		displayName = "";
		model = "";
		descriptionShort = "...";
		storageCategory = 1;
		weight = 1000;
		itemSize[] = {1, 1};
		baseAttachments[] = {};
		attachments[] = {};
		SingleUseActions[] = {};
		ContinuousActions[] = {};
		InteractActions[] = {};
		handAnim[] = {};
		armAction = "Rifle";
		autoQuickbar = 0;
		handheld = "true";
		repairableWith = 0;
		ragQuantity = 0;
		fragility = 0.1;
		inventoryCondition = "true";
		inventorySlot = "";
		cargoClass = "";
		targetCategory = "";
		itemInfo[] = {};
		absorbency = 0;
		heatIsolation = 0;
		heatReduction = 0;
		coldReduction = 0;
		rotateAlways = 0;
		rotateDropped = 0;
		rotateY = 0;
		rotateZ = 0;
		spawnDamageMax = 0.6;
		stackedMax = 0;
		canSplit = 0;
		stackedUnit = "pc.";
		quantity = "";
		quantityBar = 0;
		animated = false;
		reversed = true;
		vehicleClass = "Inventory";
		mapSize = 1;
		side = TCivilian;
		supplyRadius = 1.4;
		hiddenSelections[] = {};
		hiddenSelectionsTextures[] = {};
		recoilModifier = "";
		
		class DamageArmor {
			biological = 0;
			ballistic = 0;
			bleed = 0;
			brute = 0;
			shock = 0;
		};
		
		class DamageSystem {
			class GlobalHealth {
				class Health {
					hitpoints = 100;
				};
				damageLevels[] = {1.0, 0.7, 0.5, 0.3, 0.0};
			};
		};
		
		class Melee {
			range = 1.0;
			swingTime = 0.5;
			action = "MeleeAttack2";
			ammo = "EN5C_MeleeFist";
			useCursor = 1;
			actionSounds = "action_punch";
		};
		destroyOnEmpty = 1;
		varQuantityDestroyOnMin = 1;
		varWetInit = 0;
		varWetMin = 0;
		varWetMax = 1;
		varTemperatureInit = 0;
		varTemperatureMin = 0;
		varTemperatureMax = 1;
	};
	
	class EN5C_Container_Base : EN5C_Inventory_Base {
		storageCategory = 7;
		handheld = "true";
		rotateDropped = 1;
		rotateAlways = 1;
		inventoryCondition = "typeOf _parent != typeOf _this";
		openable = 0;
		armAction = "Disarm";
		lootCategory = "Containers";
	};
	
	class EN5C_WorldContainer_Base : EN5C_Inventory_Base {
		storageCategory = 7;
		inventoryCondition = "false";
		openable = 0;
		itemsCargoSize[] = {5, 8};
		itemsCargo[] = {};
	};
	
	class EN5C_Powered_Base : EN5C_Inventory_Base {
		displayName = "Powered Item Base";
		descriptionShort = "Should not be in inventory.";
		lootTag[] = {"Work", "Civilian", "Hunting", "Military_east", "Military_west"};
		attachments[] = {"BatteryD"};
		energyResources[] = {{"power", 8.0}};
		
		class EventHandlers {
			PowerOn = "[_this select 0] call 'event_PoweredItem_swithOn';";
		};
	};
	
	class EN5C_EnergyItem_Base : EN5C_Inventory_Base {
		armAction = "Disarm";
		lootCategory = "Tools";
		quantity = "[_this,'power'] call fnc_generateRscQuantity;";
		varEnergyInit = 0;
		varEnergyMin = 0;
		varEnergyMax = 1;
		varIsLightedInit = 0;
		varIsLightedMin = 0;
		varIsLightedMax = 1;
		
		class Resources {
			power = 0;
		};
	};
	
	class EN5C_Edible_Base : EN5C_Inventory_Base {
		handheld = "true";
		rotateDropped = 1;
		armAction = "Disarm";
		spawnOffset = 0;
		trashItem = "";
		lootCategory = "Food";
		varQuantityInit = 1000;
		varQuantityMin = 0;
		varQuantityMax = 1000;
		stackedMax = 1000;
		stackedUnit = "g";
		quantity = "format ['%1%%', round((quantity _this / maxQuantity _this) * 100)]";
		quantityBar = 1;
	};
	
	class EN5C_Tearable_Base : EN5C_Inventory_Base {
		rotateDropped = 1;
		rotateAlways = 1;
		handheld = "true";
		ragQuantity = 0;
	};
	
	class EN5C_Trap_Base : EN5C_Inventory_Base {
		handheld = "true";
		armAction = "Disarm";
		itemSize[] = {2, 2};
		lootCategory = "Tools";
	};
	
	class EN5C_Grenade_Base : EN5C_Inventory_Base {
		simulation = "handGrenade";
		absorbency = 0.5;
		itemSize[] = {2, 2};
		inventoryCondition = "!(isOn _this)";
		rotateDropped = 1;
		rotateAlways = 1;
		handheld = "true";
		armAction = "Disarm";
		handAnim[] = {"OFP2_ManSkeleton", "\DZ\anims\data\anim\sdr\ik\weapons\explosives\grenade.rtm"};
		lootCategory = "Explosives";
		unpinAction = "unpinGrenade";
		havePin = 1;
		internalResources[] = {{"internalenergy", 0.1}};
	};
	
	class EN5C_Book_Base : EN5C_Inventory_Base {
		simulation = "ItemBook";
		model = "\DZ\books\Book_kniga.p3d";
		rotateDropped = 1;
		rotateAlways = 1;
		handheld = "true";
		inventorySlot = "Book";
		itemSize[] = {1, 2};
		armAction = "Disarm";
		handAnim[] = {"OFP2_ManSkeleton", "\DZ\anims\data\anim\sdr\ik\food\box_cereal.rtm"};
		varQuantityInit = 1.0;
		varQuantityMin = 0.0;
		varQuantityMax = 1.0;
		quantity = "";
		attachmentCondition = "[1, [_this, _parent]] call fireplace_state_condition";
		conditionDetach = "([4, [_this, _parent]] call fireplace_state_condition and [4, [_this, _parent]] call barrel_state_condition)";
		lootCategory = "Books";
		lootTag[] = {"Civilian"};
		hiddenSelections[] = {"camoGround"};
		hiddenSelectionsTextures[] = {"dz\books\data\book_kniga_co.paa"};
		
		class Damage {
			tex[] = {};
			mat[] = {"DZ\books\data\book.rvmat", "DZ\books\data\book_damage.rvmat", "DZ\books\data\book_destruct.rvmat"};
		};
	};
	
	class EN5C_FishingRod_Base : EN5C_Inventory_Base {
		scope = private;
		SingleUseActions[] = {540};
		ContinuousActions[] = {166};
	};
	
	class EN5C_Clothing_Base : EN5C_Inventory_Base {
		scope = private;
		simulation = "clothing";
		itemInfo[] = {"Clothing"};
	};
	
	class EN5C_Switchable_Base : EN5C_Powered_Base {
		class EventHandlers : EventHandlers {
			PowerOff = "[_this select 0] call 'event_PoweredItem_swithOff';";
		};
	};
	
	class EN5C_Bottle_Base : EN5C_Edible_Base {
		storageCategory = 7;
		autoQuickbar = 1;
		handheld = "true";
		rotateDropped = 1;
		rotateAlways = 0;
		canSplit = 0;
		armAction = "Disarm";
		quantityBar = 1;
		stackedRandom = 1;
		stackedMax = 1000;
		stackedUnit = "ml";
		itemSize[] = {1, 2};
		handAnim[] = {"OFP2_ManSkeleton", "\DZ\anims\data\anim\sdr\ik\drinks\water_bottle.rtm"};
		quantity = "format ['%1%%', round((quantity _this / maxQuantity _this) * 100)]";
		
		class Nutrition {
			totalVolume = 500;
			energy = 0;
			water = 1000;
			nutritionalIndex = 75;
		};
	};
	class Thing;	// External class reference
	class ThingEffectLight;	// External class reference
	class ThingEffectFeather;	// External class reference
	
	class FxWindGrass1 : ThingEffectLight {
		scope = protected;
		model = "\dz\data\data\cl_grass1.p3d";
		displayName = "Internal: FxWindGrass1";
		airRotation = 0.45;
	};
	
	class FxWindGrass2 : ThingEffectLight {
		scope = protected;
		model = "\dz\data\data\cl_grass2.p3d";
		displayName = "Internal: FxWindGrass2";
		airRotation = 0.3;
	};
	
	class FxWindRock1 : ThingEffectLight {
		scope = protected;
		model = "\dz\data\data\cl_rock1.p3d";
		displayName = "Internal: FxWindRock1";
		airFriction2[] = {1, 1, 1};
		airFriction1[] = {0.5, 0.5, 0.5};
		airFriction0[] = {0.05, 0.05, 0.05};
		airRotation = 0.7;
		minHeight = 0.05;
		avgHeight = 0.1;
		maxHeight = 0.15;
	};
	
	class FxWindLeaf1 : ThingEffectLight {
		scope = protected;
		model = "\dz\data\data\cl_leaf.p3d";
		displayName = "Internal: FxWindLeaf1";
		airFriction2[] = {2, 2, 8};
		airFriction1[] = {1, 1, 4};
		airFriction0[] = {0.3, 0.3, 0.1};
		airRotation = 0.35;
		minHeight = 0.3;
		avgHeight = 1.5;
		maxHeight = 3.0;
	};
	
	class FxWindLeaf2 : FxWindLeaf1 {
		model = "\dz\data\data\cl_leaf2.p3d";
		displayName = "Internal: FxWindLeaf2";
	};
	
	class FxWindLeaf3 : FxWindLeaf1 {
		model = "\dz\data\data\cl_leaf3.p3d";
		displayName = "Internal: FxWindLeaf3";
	};
	
	class FxWindPollen1 : ThingEffectFeather {
		scope = protected;
		model = "\dz\data\data\cl_feathers2.p3d";
		displayName = "Internal: FxWindPollen1";
	};
	
	class FXUSWindLeaf1 : ThingEffectLight {
		scope = protected;
		model = "\dz\data\cr_leaf.p3d";
		displayName = "Internal: FxUSWindLeaf1";
		airFriction2[] = {2, 2, 8};
		airFriction1[] = {1, 1, 4};
		airFriction0[] = {0.3, 0.3, 0.1};
		airRotation = 0.35;
		minHeight = 0.3;
		avgHeight = 5.5;
		maxHeight = 10.0;
	};
	
	class FXUSWindLeaf2 : FXUSWindLeaf1 {
		model = "\dz\data\cr_leaf2.p3d";
		displayName = "Internal: FxUSWindLeaf2";
	};
	
	class FXUSWindLeaf3 : FXUSWindLeaf1 {
		model = "\dz\data\cr_leaf3.p3d";
		displayName = "Internal: FxUSWindLeaf3";
	};
};

class CfgNonAIVehicles {
	class TreeHard;	// External class reference
	
	class TreeHard_t_picea3f : TreeHard {
		class DamageSystem {
			class GlobalHealth {
				class Health {
					hitpoints = 631;
				};
			};
		};
	};
	
	class ProxyFlag {
		scope = public;
		model = "";
		autocenter = false;
		reversed = false;
		simulation = "flag";
		selectionFabric = "latka";
	};
	class ProxyCargo;	// External class reference
	
	class ProxyCargo01 : ProxyCargo {};
	
	class ProxyCargo02 : ProxyCargo {};
	
	class ProxyCargo03 : ProxyCargo {};
	
	class ProxyCargo04 : ProxyCargo {};
};

class CfgRecipes {
	class Default {
		name = "";
		material[] = {};
		tools[] = {};
		results[] = {};
		condition = "";
		action = "";
	};
};
